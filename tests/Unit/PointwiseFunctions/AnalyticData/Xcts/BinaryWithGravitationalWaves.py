# Distributed under the MIT License.
# See LICENSE.txt for details.

import numpy as np
from scipy.interpolate import CubicHermiteSpline
from scipy.optimize import toms748

xcoords = [-4.5, 10.2]
mass_left = 1.1
mass_right = 0.9
atenuation_parameter = 0.99
outer_radius = 21.0
separation = xcoords[1] - xcoords[0]
total_mass = mass_left + mass_right
reduced_mass = mass_left * mass_right / total_mass
p_circular_squared = (
    reduced_mass * reduced_mass * total_mass / separation
    + 4.0
    * reduced_mass
    * reduced_mass
    * total_mass
    * total_mass
    / (separation * separation)
    + (74.0 - 43.0 * reduced_mass / total_mass)
    * reduced_mass
    * reduced_mass
    * total_mass
    * total_mass
    * total_mass
    / (8.0 * separation * separation * separation)
)
momentum1 = np.array([0.0, np.sqrt(p_circular_squared), 0.0])
momentum2 = np.array([0.0, -np.sqrt(p_circular_squared), 0.0])
delta = np.identity(3)
normal = np.array([-1.0, 0.0, 0.0])
# Evolution done by independent Toy Code
# (maybe there is a better way to do this)
t = np.array(
    [
        -41.9,
        -41.8,
        -41.7,
        -41.6,
        -41.5,
        -41.4,
        -41.3,
        -41.2,
        -41.1,
        -41,
        -40.9,
        -40.8,
        -40.7,
        -40.6,
        -40.5,
        -40.4,
        -40.3,
        -40.2,
        -40.1,
        -40,
        -39.9,
        -39.8,
        -39.7,
        -39.6,
        -39.5,
        -39.4,
        -39.3,
        -39.2,
        -39.1,
        -39,
        -38.9,
        -38.8,
        -38.7,
        -38.6,
        -38.5,
        -38.4,
        -38.3,
        -38.2,
        -38.1,
        -38,
        -37.9,
        -37.8,
        -37.7,
        -37.6,
        -37.5,
        -37.4,
        -37.3,
        -37.2,
        -37.1,
        -37,
        -36.9,
        -36.8,
        -36.7,
        -36.6,
        -36.5,
        -36.4,
        -36.3,
        -36.2,
        -36.1,
        -36,
        -35.9,
        -35.8,
        -35.7,
        -35.6,
        -35.5,
        -35.4,
        -35.3,
        -35.2,
        -35.1,
        -35,
        -34.9,
        -34.8,
        -34.7,
        -34.6,
        -34.5,
        -34.4,
        -34.3,
        -34.2,
        -34.1,
        -34,
        -33.9,
        -33.8,
        -33.7,
        -33.6,
        -33.5,
        -33.4,
        -33.3,
        -33.2,
        -33.1,
        -33,
        -32.9,
        -32.8,
        -32.7,
        -32.6,
        -32.5,
        -32.4,
        -32.3,
        -32.2,
        -32.1,
        -32,
        -31.9,
        -31.8,
        -31.7,
        -31.6,
        -31.5,
        -31.4,
        -31.3,
        -31.2,
        -31.1,
        -31,
        -30.9,
        -30.8,
        -30.7,
        -30.6,
        -30.5,
        -30.4,
        -30.3,
        -30.2,
        -30.1,
        -30,
        -29.9,
        -29.8,
        -29.7,
        -29.6,
        -29.5,
        -29.4,
        -29.3,
        -29.2,
        -29.1,
        -29,
        -28.9,
        -28.8,
        -28.7,
        -28.6,
        -28.5,
        -28.4,
        -28.3,
        -28.2,
        -28.1,
        -28,
        -27.9,
        -27.8,
        -27.7,
        -27.6,
        -27.5,
        -27.4,
        -27.3,
        -27.2,
        -27.1,
        -27,
        -26.9,
        -26.8,
        -26.7,
        -26.6,
        -26.5,
        -26.4,
        -26.3,
        -26.2,
        -26.1,
        -26,
        -25.9,
        -25.8,
        -25.7,
        -25.6,
        -25.5,
        -25.4,
        -25.3,
        -25.2,
        -25.1,
        -25,
        -24.9,
        -24.8,
        -24.7,
        -24.6,
        -24.5,
        -24.4,
        -24.3,
        -24.2,
        -24.1,
        -24,
        -23.9,
        -23.8,
        -23.7,
        -23.6,
        -23.5,
        -23.4,
        -23.3,
        -23.2,
        -23.1,
        -23,
        -22.9,
        -22.8,
        -22.7,
        -22.6,
        -22.5,
        -22.4,
        -22.3,
        -22.2,
        -22.1,
        -22,
        -21.9,
        -21.8,
        -21.7,
        -21.6,
        -21.5,
        -21.4,
        -21.3,
        -21.2,
        -21.1,
        -21,
        -20.9,
        -20.8,
        -20.7,
        -20.6,
        -20.5,
        -20.4,
        -20.3,
        -20.2,
        -20.1,
        -20,
        -19.9,
        -19.8,
        -19.7,
        -19.6,
        -19.5,
        -19.4,
        -19.3,
        -19.2,
        -19.1,
        -19,
        -18.9,
        -18.8,
        -18.7,
        -18.6,
        -18.5,
        -18.4,
        -18.3,
        -18.2,
        -18.1,
        -18,
        -17.9,
        -17.8,
        -17.7,
        -17.6,
        -17.5,
        -17.4,
        -17.3,
        -17.2,
        -17.1,
        -17,
        -16.9,
        -16.8,
        -16.7,
        -16.6,
        -16.5,
        -16.4,
        -16.3,
        -16.2,
        -16.1,
        -16,
        -15.9,
        -15.8,
        -15.7,
        -15.6,
        -15.5,
        -15.4,
        -15.3,
        -15.2,
        -15.1,
        -15,
        -14.9,
        -14.8,
        -14.7,
        -14.6,
        -14.5,
        -14.4,
        -14.3,
        -14.2,
        -14.1,
        -14,
        -13.9,
        -13.8,
        -13.7,
        -13.6,
        -13.5,
        -13.4,
        -13.3,
        -13.2,
        -13.1,
        -13,
        -12.9,
        -12.8,
        -12.7,
        -12.6,
        -12.5,
        -12.4,
        -12.3,
        -12.2,
        -12.1,
        -12,
        -11.9,
        -11.8,
        -11.7,
        -11.6,
        -11.5,
        -11.4,
        -11.3,
        -11.2,
        -11.1,
        -11,
        -10.9,
        -10.8,
        -10.7,
        -10.6,
        -10.5,
        -10.4,
        -10.3,
        -10.2,
        -10.1,
        -10,
        -9.9,
        -9.8,
        -9.7,
        -9.6,
        -9.5,
        -9.4,
        -9.3,
        -9.2,
        -9.1,
        -9,
        -8.9,
        -8.8,
        -8.7,
        -8.6,
        -8.5,
        -8.4,
        -8.3,
        -8.2,
        -8.1,
        -8,
        -7.9,
        -7.8,
        -7.7,
        -7.6,
        -7.5,
        -7.4,
        -7.3,
        -7.2,
        -7.1,
        -7,
        -6.9,
        -6.8,
        -6.7,
        -6.6,
        -6.5,
        -6.4,
        -6.3,
        -6.2,
        -6.1,
        -6,
        -5.9,
        -5.8,
        -5.7,
        -5.6,
        -5.5,
        -5.4,
        -5.3,
        -5.2,
        -5.1,
        -5,
        -4.9,
        -4.8,
        -4.7,
        -4.6,
        -4.5,
        -4.4,
        -4.3,
        -4.2,
        -4.1,
        -4,
        -3.9,
        -3.8,
        -3.7,
        -3.6,
        -3.5,
        -3.4,
        -3.3,
        -3.2,
        -3.1,
        -3,
        -2.9,
        -2.8,
        -2.7,
        -2.6,
        -2.5,
        -2.4,
        -2.3,
        -2.2,
        -2.1,
        -2,
        -1.9,
        -1.8,
        -1.7,
        -1.6,
        -1.5,
        -1.4,
        -1.3,
        -1.2,
        -1.1,
        -1,
        -0.9,
        -0.8,
        -0.7,
        -0.6,
        -0.5,
        -0.4,
        -0.3,
        -0.2,
        -0.1,
        0,
    ]
)
x_left = np.array(
    [
        -2.09012,
        -2.10086,
        -2.11158,
        -2.12228,
        -2.13296,
        -2.14363,
        -2.15427,
        -2.1649,
        -2.17551,
        -2.1861,
        -2.19667,
        -2.20722,
        -2.21775,
        -2.22826,
        -2.23875,
        -2.24923,
        -2.25968,
        -2.27011,
        -2.28053,
        -2.29093,
        -2.3013,
        -2.31166,
        -2.322,
        -2.33231,
        -2.34261,
        -2.35289,
        -2.36315,
        -2.37339,
        -2.3836,
        -2.3938,
        -2.40398,
        -2.41414,
        -2.42428,
        -2.4344,
        -2.44449,
        -2.45457,
        -2.46463,
        -2.47467,
        -2.48468,
        -2.49468,
        -2.50466,
        -2.51461,
        -2.52455,
        -2.53446,
        -2.54436,
        -2.55423,
        -2.56408,
        -2.57392,
        -2.58373,
        -2.59352,
        -2.60329,
        -2.61304,
        -2.62277,
        -2.63247,
        -2.64216,
        -2.65182,
        -2.66147,
        -2.67109,
        -2.68069,
        -2.69027,
        -2.69983,
        -2.70937,
        -2.71888,
        -2.72838,
        -2.73785,
        -2.7473,
        -2.75673,
        -2.76614,
        -2.77553,
        -2.78489,
        -2.79424,
        -2.80356,
        -2.81286,
        -2.82213,
        -2.83139,
        -2.84063,
        -2.84984,
        -2.85903,
        -2.8682,
        -2.87734,
        -2.88647,
        -2.89557,
        -2.90465,
        -2.91371,
        -2.92274,
        -2.93175,
        -2.94074,
        -2.94971,
        -2.95866,
        -2.96758,
        -2.97648,
        -2.98536,
        -2.99422,
        -3.00305,
        -3.01186,
        -3.02065,
        -3.02941,
        -3.03815,
        -3.04687,
        -3.05557,
        -3.06424,
        -3.07289,
        -3.08152,
        -3.09012,
        -3.09871,
        -3.10726,
        -3.1158,
        -3.12431,
        -3.1328,
        -3.14127,
        -3.14971,
        -3.15813,
        -3.16652,
        -3.17489,
        -3.18324,
        -3.19157,
        -3.19987,
        -3.20815,
        -3.2164,
        -3.22463,
        -3.23284,
        -3.24102,
        -3.24918,
        -3.25732,
        -3.26543,
        -3.27352,
        -3.28158,
        -3.28962,
        -3.29764,
        -3.30563,
        -3.3136,
        -3.32155,
        -3.32947,
        -3.33736,
        -3.34524,
        -3.35308,
        -3.36091,
        -3.36871,
        -3.37648,
        -3.38423,
        -3.39196,
        -3.39966,
        -3.40734,
        -3.41499,
        -3.42262,
        -3.43023,
        -3.43781,
        -3.44536,
        -3.45289,
        -3.4604,
        -3.46788,
        -3.47533,
        -3.48277,
        -3.49017,
        -3.49755,
        -3.50491,
        -3.51224,
        -3.51955,
        -3.52683,
        -3.53409,
        -3.54132,
        -3.54853,
        -3.55571,
        -3.56287,
        -3.57,
        -3.57711,
        -3.58419,
        -3.59124,
        -3.59827,
        -3.60528,
        -3.61226,
        -3.61921,
        -3.62614,
        -3.63305,
        -3.63993,
        -3.64678,
        -3.65361,
        -3.66041,
        -3.66718,
        -3.67393,
        -3.68066,
        -3.68736,
        -3.69403,
        -3.70068,
        -3.7073,
        -3.7139,
        -3.72047,
        -3.72701,
        -3.73353,
        -3.74002,
        -3.74649,
        -3.75293,
        -3.75935,
        -3.76574,
        -3.7721,
        -3.77844,
        -3.78475,
        -3.79103,
        -3.79729,
        -3.80352,
        -3.80973,
        -3.81591,
        -3.82206,
        -3.82819,
        -3.83429,
        -3.84036,
        -3.84641,
        -3.85243,
        -3.85843,
        -3.86439,
        -3.87034,
        -3.87625,
        -3.88214,
        -3.888,
        -3.89384,
        -3.89965,
        -3.90543,
        -3.91119,
        -3.91692,
        -3.92262,
        -3.92829,
        -3.93394,
        -3.93956,
        -3.94516,
        -3.95073,
        -3.95627,
        -3.96178,
        -3.96727,
        -3.97273,
        -3.97817,
        -3.98357,
        -3.98895,
        -3.99431,
        -3.99963,
        -4.00493,
        -4.0102,
        -4.01545,
        -4.02066,
        -4.02585,
        -4.03102,
        -4.03615,
        -4.04126,
        -4.04634,
        -4.05139,
        -4.05642,
        -4.06142,
        -4.06639,
        -4.07134,
        -4.07625,
        -4.08114,
        -4.086,
        -4.09084,
        -4.09564,
        -4.10042,
        -4.10518,
        -4.1099,
        -4.1146,
        -4.11927,
        -4.12391,
        -4.12852,
        -4.13311,
        -4.13767,
        -4.1422,
        -4.1467,
        -4.15118,
        -4.15562,
        -4.16004,
        -4.16444,
        -4.1688,
        -4.17314,
        -4.17744,
        -4.18173,
        -4.18598,
        -4.1902,
        -4.1944,
        -4.19857,
        -4.20271,
        -4.20682,
        -4.21091,
        -4.21496,
        -4.21899,
        -4.22299,
        -4.22697,
        -4.23091,
        -4.23483,
        -4.23872,
        -4.24258,
        -4.24641,
        -4.25021,
        -4.25399,
        -4.25774,
        -4.26146,
        -4.26515,
        -4.26881,
        -4.27244,
        -4.27605,
        -4.27963,
        -4.28318,
        -4.2867,
        -4.29019,
        -4.29365,
        -4.29709,
        -4.3005,
        -4.30388,
        -4.30723,
        -4.31055,
        -4.31384,
        -4.31711,
        -4.32035,
        -4.32356,
        -4.32673,
        -4.32989,
        -4.33301,
        -4.3361,
        -4.33917,
        -4.34221,
        -4.34521,
        -4.34819,
        -4.35114,
        -4.35407,
        -4.35696,
        -4.35983,
        -4.36266,
        -4.36547,
        -4.36825,
        -4.371,
        -4.37372,
        -4.37641,
        -4.37908,
        -4.38171,
        -4.38432,
        -4.3869,
        -4.38945,
        -4.39197,
        -4.39446,
        -4.39692,
        -4.39935,
        -4.40176,
        -4.40414,
        -4.40648,
        -4.4088,
        -4.41109,
        -4.41335,
        -4.41558,
        -4.41778,
        -4.41996,
        -4.4221,
        -4.42422,
        -4.4263,
        -4.42836,
        -4.43039,
        -4.43239,
        -4.43436,
        -4.4363,
        -4.43822,
        -4.4401,
        -4.44195,
        -4.44378,
        -4.44558,
        -4.44734,
        -4.44908,
        -4.45079,
        -4.45247,
        -4.45412,
        -4.45575,
        -4.45734,
        -4.4589,
        -4.46044,
        -4.46194,
        -4.46342,
        -4.46487,
        -4.46628,
        -4.46767,
        -4.46903,
        -4.47036,
        -4.47167,
        -4.47294,
        -4.47418,
        -4.4754,
        -4.47658,
        -4.47774,
        -4.47886,
        -4.47996,
        -4.48103,
        -4.48207,
        -4.48308,
        -4.48406,
        -4.48501,
        -4.48593,
        -4.48682,
        -4.48769,
        -4.48852,
        -4.48933,
        -4.4901,
        -4.49085,
        -4.49157,
        -4.49225,
        -4.49291,
        -4.49354,
        -4.49414,
        -4.49471,
        -4.49526,
        -4.49577,
        -4.49625,
        -4.49671,
        -4.49713,
        -4.49753,
        -4.49789,
        -4.49823,
        -4.49854,
        -4.49881,
        -4.49906,
        -4.49928,
        -4.49947,
        -4.49963,
        -4.49977,
        -4.49987,
        -4.49994,
        -4.49999,
        -4.5,
    ]
)
y_left = np.array(
    [
        -5.12346,
        -5.11453,
        -5.10559,
        -5.09662,
        -5.08763,
        -5.07862,
        -5.06959,
        -5.06053,
        -5.05145,
        -5.04235,
        -5.03323,
        -5.02409,
        -5.01492,
        -5.00573,
        -4.99652,
        -4.98729,
        -4.97803,
        -4.96876,
        -4.95946,
        -4.95014,
        -4.94079,
        -4.93143,
        -4.92205,
        -4.91264,
        -4.90321,
        -4.89376,
        -4.88429,
        -4.8748,
        -4.86528,
        -4.85575,
        -4.84619,
        -4.83661,
        -4.82701,
        -4.81739,
        -4.80775,
        -4.79809,
        -4.7884,
        -4.7787,
        -4.76897,
        -4.75922,
        -4.74945,
        -4.73967,
        -4.72986,
        -4.72003,
        -4.71017,
        -4.7003,
        -4.69041,
        -4.6805,
        -4.67056,
        -4.66061,
        -4.65063,
        -4.64064,
        -4.63062,
        -4.62059,
        -4.61053,
        -4.60045,
        -4.59036,
        -4.58024,
        -4.5701,
        -4.55995,
        -4.54977,
        -4.53957,
        -4.52936,
        -4.51912,
        -4.50886,
        -4.49859,
        -4.48829,
        -4.47797,
        -4.46764,
        -4.45728,
        -4.44691,
        -4.43651,
        -4.4261,
        -4.41567,
        -4.40521,
        -4.39474,
        -4.38425,
        -4.37374,
        -4.36321,
        -4.35266,
        -4.34209,
        -4.3315,
        -4.3209,
        -4.31027,
        -4.29963,
        -4.28896,
        -4.27828,
        -4.26758,
        -4.25686,
        -4.24612,
        -4.23537,
        -4.22459,
        -4.2138,
        -4.20298,
        -4.19215,
        -4.1813,
        -4.17043,
        -4.15955,
        -4.14864,
        -4.13772,
        -4.12678,
        -4.11582,
        -4.10484,
        -4.09385,
        -4.08283,
        -4.0718,
        -4.06075,
        -4.04969,
        -4.0386,
        -4.0275,
        -4.01638,
        -4.00524,
        -3.99409,
        -3.98291,
        -3.97172,
        -3.96052,
        -3.94929,
        -3.93805,
        -3.92679,
        -3.91551,
        -3.90422,
        -3.8929,
        -3.88157,
        -3.87023,
        -3.85887,
        -3.84749,
        -3.83609,
        -3.82468,
        -3.81325,
        -3.8018,
        -3.79033,
        -3.77885,
        -3.76736,
        -3.75584,
        -3.74431,
        -3.73277,
        -3.7212,
        -3.70962,
        -3.69803,
        -3.68642,
        -3.67479,
        -3.66314,
        -3.65148,
        -3.63981,
        -3.62811,
        -3.61641,
        -3.60468,
        -3.59294,
        -3.58118,
        -3.56941,
        -3.55763,
        -3.54582,
        -3.534,
        -3.52217,
        -3.51032,
        -3.49846,
        -3.48658,
        -3.47468,
        -3.46277,
        -3.45084,
        -3.4389,
        -3.42694,
        -3.41497,
        -3.40299,
        -3.39098,
        -3.37897,
        -3.36694,
        -3.35489,
        -3.34283,
        -3.33075,
        -3.31866,
        -3.30656,
        -3.29444,
        -3.28231,
        -3.27016,
        -3.258,
        -3.24582,
        -3.23363,
        -3.22142,
        -3.2092,
        -3.19697,
        -3.18472,
        -3.17246,
        -3.16018,
        -3.1479,
        -3.13559,
        -3.12327,
        -3.11094,
        -3.0986,
        -3.08624,
        -3.07387,
        -3.06148,
        -3.04909,
        -3.03667,
        -3.02425,
        -3.01181,
        -2.99936,
        -2.98689,
        -2.97442,
        -2.96192,
        -2.94942,
        -2.9369,
        -2.92437,
        -2.91183,
        -2.89927,
        -2.88671,
        -2.87412,
        -2.86153,
        -2.84892,
        -2.83631,
        -2.82367,
        -2.81103,
        -2.79837,
        -2.78571,
        -2.77303,
        -2.76033,
        -2.74763,
        -2.73491,
        -2.72218,
        -2.70944,
        -2.69669,
        -2.68392,
        -2.67115,
        -2.65836,
        -2.64556,
        -2.63275,
        -2.61993,
        -2.60709,
        -2.59425,
        -2.58139,
        -2.56852,
        -2.55564,
        -2.54275,
        -2.52985,
        -2.51693,
        -2.50401,
        -2.49107,
        -2.47813,
        -2.46517,
        -2.4522,
        -2.43922,
        -2.42623,
        -2.41323,
        -2.40022,
        -2.3872,
        -2.37417,
        -2.36113,
        -2.34807,
        -2.33501,
        -2.32194,
        -2.30885,
        -2.29576,
        -2.28266,
        -2.26954,
        -2.25642,
        -2.24329,
        -2.23014,
        -2.21699,
        -2.20383,
        -2.19066,
        -2.17747,
        -2.16428,
        -2.15108,
        -2.13787,
        -2.12465,
        -2.11142,
        -2.09818,
        -2.08494,
        -2.07168,
        -2.05841,
        -2.04514,
        -2.03185,
        -2.01856,
        -2.00526,
        -1.99195,
        -1.97863,
        -1.9653,
        -1.95197,
        -1.93862,
        -1.92527,
        -1.91191,
        -1.89854,
        -1.88516,
        -1.87177,
        -1.85838,
        -1.84497,
        -1.83156,
        -1.81814,
        -1.80471,
        -1.79128,
        -1.77784,
        -1.76439,
        -1.75093,
        -1.73746,
        -1.72399,
        -1.71051,
        -1.69702,
        -1.68352,
        -1.67002,
        -1.65651,
        -1.64299,
        -1.62946,
        -1.61593,
        -1.60239,
        -1.58884,
        -1.57529,
        -1.56173,
        -1.54816,
        -1.53459,
        -1.52101,
        -1.50742,
        -1.49383,
        -1.48023,
        -1.46662,
        -1.45301,
        -1.43939,
        -1.42576,
        -1.41213,
        -1.39849,
        -1.38485,
        -1.37119,
        -1.35754,
        -1.34388,
        -1.33021,
        -1.31653,
        -1.30285,
        -1.28917,
        -1.27548,
        -1.26178,
        -1.24808,
        -1.23437,
        -1.22066,
        -1.20694,
        -1.19322,
        -1.17949,
        -1.16575,
        -1.15201,
        -1.13827,
        -1.12452,
        -1.11077,
        -1.09701,
        -1.08324,
        -1.06948,
        -1.0557,
        -1.04193,
        -1.02814,
        -1.01436,
        -1.00057,
        -0.986771,
        -0.972971,
        -0.959167,
        -0.945359,
        -0.931547,
        -0.917731,
        -0.903911,
        -0.890087,
        -0.876259,
        -0.862427,
        -0.848592,
        -0.834753,
        -0.82091,
        -0.807064,
        -0.793214,
        -0.779361,
        -0.765505,
        -0.751645,
        -0.737782,
        -0.723915,
        -0.710046,
        -0.696173,
        -0.682298,
        -0.66842,
        -0.654538,
        -0.640654,
        -0.626767,
        -0.612878,
        -0.598985,
        -0.585091,
        -0.571193,
        -0.557294,
        -0.543391,
        -0.529487,
        -0.51558,
        -0.501671,
        -0.48776,
        -0.473847,
        -0.459932,
        -0.446015,
        -0.432096,
        -0.418175,
        -0.404252,
        -0.390328,
        -0.376402,
        -0.362474,
        -0.348545,
        -0.334614,
        -0.320682,
        -0.306749,
        -0.292814,
        -0.278878,
        -0.264941,
        -0.251003,
        -0.237064,
        -0.223124,
        -0.209183,
        -0.195241,
        -0.181298,
        -0.167355,
        -0.153411,
        -0.139466,
        -0.125521,
        -0.111575,
        -0.0976293,
        -0.0836829,
        -0.0697361,
        -0.0557891,
        -0.0418419,
        -0.0278946,
        -0.0139473,
        0,
    ]
)
z_left = np.array(
    [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ]
)
p_left_x = np.array(
    [
        -0.182809,
        -0.182492,
        -0.182175,
        -0.181856,
        -0.181537,
        -0.181217,
        -0.180897,
        -0.180575,
        -0.180253,
        -0.17993,
        -0.179606,
        -0.179281,
        -0.178956,
        -0.178629,
        -0.178302,
        -0.177975,
        -0.177646,
        -0.177316,
        -0.176986,
        -0.176655,
        -0.176323,
        -0.175991,
        -0.175657,
        -0.175323,
        -0.174988,
        -0.174652,
        -0.174316,
        -0.173979,
        -0.173641,
        -0.173302,
        -0.172962,
        -0.172622,
        -0.172281,
        -0.171939,
        -0.171596,
        -0.171253,
        -0.170908,
        -0.170563,
        -0.170218,
        -0.169871,
        -0.169524,
        -0.169176,
        -0.168827,
        -0.168478,
        -0.168127,
        -0.167776,
        -0.167425,
        -0.167072,
        -0.166719,
        -0.166365,
        -0.16601,
        -0.165655,
        -0.165299,
        -0.164942,
        -0.164584,
        -0.164226,
        -0.163867,
        -0.163507,
        -0.163146,
        -0.162785,
        -0.162423,
        -0.16206,
        -0.161696,
        -0.161332,
        -0.160967,
        -0.160602,
        -0.160235,
        -0.159868,
        -0.1595,
        -0.159132,
        -0.158763,
        -0.158393,
        -0.158022,
        -0.157651,
        -0.157279,
        -0.156906,
        -0.156533,
        -0.156159,
        -0.155784,
        -0.155408,
        -0.155032,
        -0.154655,
        -0.154278,
        -0.153899,
        -0.15352,
        -0.153141,
        -0.15276,
        -0.152379,
        -0.151998,
        -0.151615,
        -0.151232,
        -0.150849,
        -0.150464,
        -0.150079,
        -0.149693,
        -0.149307,
        -0.14892,
        -0.148532,
        -0.148144,
        -0.147755,
        -0.147365,
        -0.146975,
        -0.146584,
        -0.146192,
        -0.1458,
        -0.145407,
        -0.145013,
        -0.144619,
        -0.144224,
        -0.143828,
        -0.143432,
        -0.143035,
        -0.142638,
        -0.14224,
        -0.141841,
        -0.141442,
        -0.141042,
        -0.140641,
        -0.14024,
        -0.139838,
        -0.139436,
        -0.139032,
        -0.138629,
        -0.138224,
        -0.137819,
        -0.137414,
        -0.137007,
        -0.136601,
        -0.136193,
        -0.135785,
        -0.135377,
        -0.134967,
        -0.134557,
        -0.134147,
        -0.133736,
        -0.133324,
        -0.132912,
        -0.132499,
        -0.132086,
        -0.131672,
        -0.131257,
        -0.130842,
        -0.130426,
        -0.13001,
        -0.129593,
        -0.129176,
        -0.128758,
        -0.128339,
        -0.12792,
        -0.1275,
        -0.12708,
        -0.126659,
        -0.126237,
        -0.125815,
        -0.125392,
        -0.124969,
        -0.124546,
        -0.124121,
        -0.123696,
        -0.123271,
        -0.122845,
        -0.122419,
        -0.121992,
        -0.121564,
        -0.121136,
        -0.120707,
        -0.120278,
        -0.119848,
        -0.119418,
        -0.118987,
        -0.118556,
        -0.118124,
        -0.117692,
        -0.117259,
        -0.116825,
        -0.116391,
        -0.115957,
        -0.115522,
        -0.115086,
        -0.11465,
        -0.114214,
        -0.113777,
        -0.113339,
        -0.112901,
        -0.112463,
        -0.112024,
        -0.111584,
        -0.111144,
        -0.110704,
        -0.110263,
        -0.109821,
        -0.109379,
        -0.108937,
        -0.108494,
        -0.10805,
        -0.107606,
        -0.107162,
        -0.106717,
        -0.106271,
        -0.105826,
        -0.105379,
        -0.104932,
        -0.104485,
        -0.104037,
        -0.103589,
        -0.103141,
        -0.102691,
        -0.102242,
        -0.101792,
        -0.101341,
        -0.10089,
        -0.100439,
        -0.0999873,
        -0.099535,
        -0.0990823,
        -0.0986291,
        -0.0981755,
        -0.0977215,
        -0.097267,
        -0.0968121,
        -0.0963568,
        -0.0959011,
        -0.0954449,
        -0.0949883,
        -0.0945312,
        -0.0940738,
        -0.0936159,
        -0.0931576,
        -0.0926989,
        -0.0922398,
        -0.0917803,
        -0.0913203,
        -0.09086,
        -0.0903993,
        -0.0899381,
        -0.0894766,
        -0.0890146,
        -0.0885523,
        -0.0880895,
        -0.0876264,
        -0.0871629,
        -0.086699,
        -0.0862347,
        -0.08577,
        -0.085305,
        -0.0848396,
        -0.0843737,
        -0.0839076,
        -0.083441,
        -0.0829741,
        -0.0825068,
        -0.0820391,
        -0.0815711,
        -0.0811027,
        -0.0806339,
        -0.0801648,
        -0.0796954,
        -0.0792255,
        -0.0787554,
        -0.0782848,
        -0.077814,
        -0.0773428,
        -0.0768712,
        -0.0763993,
        -0.0759271,
        -0.0754545,
        -0.0749816,
        -0.0745083,
        -0.0740347,
        -0.0735608,
        -0.0730866,
        -0.0726121,
        -0.0721372,
        -0.071662,
        -0.0711865,
        -0.0707106,
        -0.0702345,
        -0.069758,
        -0.0692813,
        -0.0688042,
        -0.0683268,
        -0.0678491,
        -0.0673712,
        -0.0668929,
        -0.0664143,
        -0.0659354,
        -0.0654563,
        -0.0649768,
        -0.0644971,
        -0.064017,
        -0.0635367,
        -0.0630561,
        -0.0625753,
        -0.0620941,
        -0.0616127,
        -0.061131,
        -0.060649,
        -0.0601668,
        -0.0596843,
        -0.0592015,
        -0.0587185,
        -0.0582352,
        -0.0577516,
        -0.0572678,
        -0.0567838,
        -0.0562995,
        -0.0558149,
        -0.0553301,
        -0.0548451,
        -0.0543598,
        -0.0538742,
        -0.0533885,
        -0.0529025,
        -0.0524162,
        -0.0519298,
        -0.0514431,
        -0.0509561,
        -0.050469,
        -0.0499816,
        -0.049494,
        -0.0490062,
        -0.0485182,
        -0.0480299,
        -0.0475415,
        -0.0470528,
        -0.0465639,
        -0.0460749,
        -0.0455856,
        -0.0450961,
        -0.0446064,
        -0.0441166,
        -0.0436265,
        -0.0431362,
        -0.0426458,
        -0.0421551,
        -0.0416643,
        -0.0411733,
        -0.0406821,
        -0.0401907,
        -0.0396992,
        -0.0392075,
        -0.0387156,
        -0.0382235,
        -0.0377313,
        -0.0372389,
        -0.0367463,
        -0.0362536,
        -0.0357607,
        -0.0352677,
        -0.0347745,
        -0.0342812,
        -0.0337877,
        -0.033294,
        -0.0328003,
        -0.0323063,
        -0.0318123,
        -0.0313181,
        -0.0308237,
        -0.0303292,
        -0.0298346,
        -0.0293399,
        -0.028845,
        -0.02835,
        -0.0278549,
        -0.0273597,
        -0.0268643,
        -0.0263688,
        -0.0258732,
        -0.0253775,
        -0.0248817,
        -0.0243858,
        -0.0238898,
        -0.0233936,
        -0.0228974,
        -0.0224011,
        -0.0219046,
        -0.0214081,
        -0.0209115,
        -0.0204148,
        -0.019918,
        -0.0194211,
        -0.0189242,
        -0.0184271,
        -0.01793,
        -0.0174328,
        -0.0169356,
        -0.0164382,
        -0.0159408,
        -0.0154433,
        -0.0149458,
        -0.0144482,
        -0.0139505,
        -0.0134528,
        -0.012955,
        -0.0124571,
        -0.0119592,
        -0.0114613,
        -0.0109633,
        -0.0104653,
        -0.00996719,
        -0.00946907,
        -0.00897091,
        -0.00847272,
        -0.00797449,
        -0.00747623,
        -0.00697794,
        -0.00647962,
        -0.00598128,
        -0.00548291,
        -0.00498452,
        -0.00448612,
        -0.0039877,
        -0.00348926,
        -0.00299081,
        -0.00249235,
        -0.00199389,
        -0.00149542,
        -0.000996946,
        -0.000498472,
        0,
    ]
)
p_left_y = np.array(
    [
        0.151613,
        0.151995,
        0.152377,
        0.152759,
        0.15314,
        0.15352,
        0.153899,
        0.154278,
        0.154656,
        0.155033,
        0.15541,
        0.155786,
        0.156162,
        0.156536,
        0.15691,
        0.157284,
        0.157656,
        0.158028,
        0.1584,
        0.15877,
        0.15914,
        0.159509,
        0.159878,
        0.160246,
        0.160613,
        0.160979,
        0.161345,
        0.16171,
        0.162074,
        0.162438,
        0.162801,
        0.163163,
        0.163525,
        0.163885,
        0.164246,
        0.164605,
        0.164964,
        0.165321,
        0.165679,
        0.166035,
        0.166391,
        0.166746,
        0.1671,
        0.167454,
        0.167807,
        0.168159,
        0.16851,
        0.168861,
        0.16921,
        0.16956,
        0.169908,
        0.170256,
        0.170603,
        0.170949,
        0.171294,
        0.171639,
        0.171983,
        0.172326,
        0.172668,
        0.17301,
        0.173351,
        0.173691,
        0.174031,
        0.174369,
        0.174707,
        0.175044,
        0.175381,
        0.175716,
        0.176051,
        0.176385,
        0.176718,
        0.177051,
        0.177382,
        0.177713,
        0.178044,
        0.178373,
        0.178702,
        0.179029,
        0.179356,
        0.179683,
        0.180008,
        0.180333,
        0.180657,
        0.18098,
        0.181302,
        0.181624,
        0.181944,
        0.182264,
        0.182583,
        0.182902,
        0.183219,
        0.183536,
        0.183852,
        0.184167,
        0.184481,
        0.184795,
        0.185107,
        0.185419,
        0.18573,
        0.18604,
        0.18635,
        0.186658,
        0.186966,
        0.187273,
        0.187579,
        0.187884,
        0.188189,
        0.188493,
        0.188795,
        0.189097,
        0.189399,
        0.189699,
        0.189998,
        0.190297,
        0.190595,
        0.190892,
        0.191188,
        0.191483,
        0.191778,
        0.192072,
        0.192364,
        0.192656,
        0.192947,
        0.193238,
        0.193527,
        0.193816,
        0.194103,
        0.19439,
        0.194676,
        0.194961,
        0.195246,
        0.195529,
        0.195811,
        0.196093,
        0.196374,
        0.196654,
        0.196933,
        0.197211,
        0.197489,
        0.197765,
        0.198041,
        0.198316,
        0.198589,
        0.198862,
        0.199135,
        0.199406,
        0.199676,
        0.199946,
        0.200214,
        0.200482,
        0.200749,
        0.201015,
        0.20128,
        0.201544,
        0.201808,
        0.20207,
        0.202332,
        0.202592,
        0.202852,
        0.203111,
        0.203369,
        0.203626,
        0.203882,
        0.204137,
        0.204392,
        0.204645,
        0.204898,
        0.205149,
        0.2054,
        0.20565,
        0.205899,
        0.206147,
        0.206394,
        0.20664,
        0.206886,
        0.20713,
        0.207374,
        0.207616,
        0.207858,
        0.208099,
        0.208338,
        0.208577,
        0.208815,
        0.209052,
        0.209289,
        0.209524,
        0.209758,
        0.209991,
        0.210224,
        0.210455,
        0.210686,
        0.210916,
        0.211144,
        0.211372,
        0.211599,
        0.211825,
        0.21205,
        0.212274,
        0.212497,
        0.212719,
        0.212941,
        0.213161,
        0.21338,
        0.213599,
        0.213816,
        0.214033,
        0.214248,
        0.214463,
        0.214677,
        0.214889,
        0.215101,
        0.215312,
        0.215522,
        0.215731,
        0.215939,
        0.216146,
        0.216352,
        0.216557,
        0.216761,
        0.216965,
        0.217167,
        0.217368,
        0.217569,
        0.217768,
        0.217966,
        0.218164,
        0.21836,
        0.218556,
        0.21875,
        0.218944,
        0.219137,
        0.219328,
        0.219519,
        0.219709,
        0.219897,
        0.220085,
        0.220272,
        0.220458,
        0.220643,
        0.220827,
        0.22101,
        0.221192,
        0.221372,
        0.221552,
        0.221731,
        0.221909,
        0.222086,
        0.222263,
        0.222438,
        0.222612,
        0.222785,
        0.222957,
        0.223128,
        0.223298,
        0.223467,
        0.223636,
        0.223803,
        0.223969,
        0.224134,
        0.224298,
        0.224462,
        0.224624,
        0.224785,
        0.224945,
        0.225105,
        0.225263,
        0.22542,
        0.225576,
        0.225732,
        0.225886,
        0.226039,
        0.226191,
        0.226343,
        0.226493,
        0.226642,
        0.22679,
        0.226938,
        0.227084,
        0.227229,
        0.227373,
        0.227517,
        0.227659,
        0.2278,
        0.22794,
        0.228079,
        0.228218,
        0.228355,
        0.228491,
        0.228626,
        0.22876,
        0.228894,
        0.229026,
        0.229157,
        0.229287,
        0.229416,
        0.229544,
        0.229671,
        0.229797,
        0.229922,
        0.230046,
        0.230169,
        0.230291,
        0.230412,
        0.230532,
        0.230651,
        0.230769,
        0.230886,
        0.231001,
        0.231116,
        0.23123,
        0.231343,
        0.231455,
        0.231565,
        0.231675,
        0.231784,
        0.231891,
        0.231998,
        0.232104,
        0.232208,
        0.232312,
        0.232414,
        0.232516,
        0.232616,
        0.232716,
        0.232814,
        0.232911,
        0.233008,
        0.233103,
        0.233197,
        0.233291,
        0.233383,
        0.233474,
        0.233564,
        0.233653,
        0.233741,
        0.233828,
        0.233914,
        0.233999,
        0.234083,
        0.234166,
        0.234248,
        0.234329,
        0.234409,
        0.234487,
        0.234565,
        0.234642,
        0.234717,
        0.234792,
        0.234866,
        0.234938,
        0.23501,
        0.23508,
        0.235149,
        0.235218,
        0.235285,
        0.235351,
        0.235417,
        0.235481,
        0.235544,
        0.235606,
        0.235667,
        0.235727,
        0.235786,
        0.235844,
        0.235901,
        0.235957,
        0.236011,
        0.236065,
        0.236118,
        0.23617,
        0.23622,
        0.23627,
        0.236318,
        0.236366,
        0.236412,
        0.236458,
        0.236502,
        0.236545,
        0.236587,
        0.236629,
        0.236669,
        0.236708,
        0.236746,
        0.236783,
        0.236819,
        0.236854,
        0.236888,
        0.23692,
        0.236952,
        0.236983,
        0.237013,
        0.237041,
        0.237069,
        0.237095,
        0.237121,
        0.237145,
        0.237168,
        0.237191,
        0.237212,
        0.237232,
        0.237251,
        0.23727,
        0.237287,
        0.237303,
        0.237318,
        0.237332,
        0.237344,
        0.237356,
        0.237367,
        0.237377,
        0.237385,
        0.237393,
        0.237399,
        0.237405,
        0.237409,
        0.237413,
        0.237415,
        0.237416,
        0.237417,
        0.237416,
    ]
)
p_left_z = np.array(
    [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ]
)
x_right = np.array(
    [
        7.25459,
        7.26772,
        7.28082,
        7.2939,
        7.30696,
        7.31999,
        7.333,
        7.34599,
        7.35895,
        7.3719,
        7.38481,
        7.39771,
        7.41058,
        7.42343,
        7.43625,
        7.44905,
        7.46183,
        7.47458,
        7.48731,
        7.50002,
        7.5127,
        7.52536,
        7.53799,
        7.5506,
        7.56319,
        7.57575,
        7.58829,
        7.6008,
        7.61329,
        7.62576,
        7.6382,
        7.65061,
        7.66301,
        7.67537,
        7.68772,
        7.70003,
        7.71233,
        7.72459,
        7.73684,
        7.74906,
        7.76125,
        7.77342,
        7.78556,
        7.79768,
        7.80977,
        7.82184,
        7.83388,
        7.8459,
        7.85789,
        7.86986,
        7.8818,
        7.89371,
        7.9056,
        7.91747,
        7.9293,
        7.94112,
        7.9529,
        7.96466,
        7.9764,
        7.98811,
        7.99979,
        8.01145,
        8.02308,
        8.03468,
        8.04626,
        8.05781,
        8.06934,
        8.08084,
        8.09231,
        8.10376,
        8.11518,
        8.12657,
        8.13794,
        8.14928,
        8.16059,
        8.17188,
        8.18313,
        8.19437,
        8.20557,
        8.21675,
        8.2279,
        8.23903,
        8.25013,
        8.2612,
        8.27224,
        8.28325,
        8.29424,
        8.3052,
        8.31614,
        8.32704,
        8.33792,
        8.34877,
        8.3596,
        8.37039,
        8.38116,
        8.3919,
        8.40261,
        8.4133,
        8.42396,
        8.43458,
        8.44518,
        8.45576,
        8.4663,
        8.47682,
        8.48731,
        8.49777,
        8.5082,
        8.5186,
        8.52898,
        8.53932,
        8.54964,
        8.55993,
        8.57019,
        8.58043,
        8.59063,
        8.6008,
        8.61095,
        8.62107,
        8.63116,
        8.64122,
        8.65125,
        8.66125,
        8.67122,
        8.68117,
        8.69108,
        8.70097,
        8.71083,
        8.72065,
        8.73045,
        8.74022,
        8.74996,
        8.75967,
        8.76935,
        8.779,
        8.78862,
        8.79821,
        8.80778,
        8.81731,
        8.82681,
        8.83629,
        8.84573,
        8.85514,
        8.86453,
        8.87388,
        8.8832,
        8.8925,
        8.90176,
        8.911,
        8.9202,
        8.92937,
        8.93852,
        8.94763,
        8.95671,
        8.96577,
        8.97479,
        8.98378,
        8.99274,
        9.00167,
        9.01057,
        9.01944,
        9.02828,
        9.03709,
        9.04587,
        9.05462,
        9.06333,
        9.07202,
        9.08067,
        9.0893,
        9.09789,
        9.10645,
        9.11498,
        9.12348,
        9.13195,
        9.14039,
        9.1488,
        9.15717,
        9.16552,
        9.17383,
        9.18211,
        9.19036,
        9.19858,
        9.20677,
        9.21493,
        9.22305,
        9.23115,
        9.23921,
        9.24724,
        9.25524,
        9.26321,
        9.27114,
        9.27905,
        9.28692,
        9.29476,
        9.30257,
        9.31034,
        9.31809,
        9.3258,
        9.33348,
        9.34113,
        9.34875,
        9.35633,
        9.36388,
        9.37141,
        9.37889,
        9.38635,
        9.39377,
        9.40117,
        9.40853,
        9.41585,
        9.42315,
        9.43041,
        9.43764,
        9.44484,
        9.452,
        9.45914,
        9.46624,
        9.4733,
        9.48034,
        9.48734,
        9.49431,
        9.50125,
        9.50815,
        9.51502,
        9.52186,
        9.52867,
        9.53544,
        9.54218,
        9.54889,
        9.55556,
        9.5622,
        9.56881,
        9.57539,
        9.58193,
        9.58844,
        9.59491,
        9.60136,
        9.60777,
        9.61414,
        9.62049,
        9.6268,
        9.63307,
        9.63932,
        9.64553,
        9.6517,
        9.65785,
        9.66396,
        9.67003,
        9.67608,
        9.68209,
        9.68806,
        9.694,
        9.69991,
        9.70579,
        9.71163,
        9.71744,
        9.72321,
        9.72895,
        9.73466,
        9.74033,
        9.74597,
        9.75158,
        9.75715,
        9.76269,
        9.76819,
        9.77366,
        9.7791,
        9.7845,
        9.78987,
        9.7952,
        9.8005,
        9.80577,
        9.811,
        9.8162,
        9.82136,
        9.82649,
        9.83158,
        9.83665,
        9.84167,
        9.84666,
        9.85162,
        9.85655,
        9.86144,
        9.86629,
        9.87111,
        9.8759,
        9.88065,
        9.88537,
        9.89006,
        9.8947,
        9.89932,
        9.9039,
        9.90845,
        9.91296,
        9.91743,
        9.92187,
        9.92628,
        9.93066,
        9.93499,
        9.9393,
        9.94357,
        9.9478,
        9.952,
        9.95616,
        9.96029,
        9.96439,
        9.96845,
        9.97248,
        9.97647,
        9.98042,
        9.98435,
        9.98823,
        9.99208,
        9.9959,
        9.99968,
        10.0034,
        10.0071,
        10.0108,
        10.0145,
        10.0181,
        10.0216,
        10.0252,
        10.0287,
        10.0321,
        10.0356,
        10.039,
        10.0423,
        10.0457,
        10.049,
        10.0522,
        10.0554,
        10.0586,
        10.0618,
        10.0649,
        10.068,
        10.071,
        10.074,
        10.077,
        10.0799,
        10.0828,
        10.0857,
        10.0885,
        10.0913,
        10.0941,
        10.0968,
        10.0995,
        10.1022,
        10.1048,
        10.1074,
        10.1099,
        10.1124,
        10.1149,
        10.1174,
        10.1198,
        10.1221,
        10.1245,
        10.1268,
        10.1291,
        10.1313,
        10.1335,
        10.1356,
        10.1378,
        10.1399,
        10.1419,
        10.1439,
        10.1459,
        10.1479,
        10.1498,
        10.1516,
        10.1535,
        10.1553,
        10.1571,
        10.1588,
        10.1605,
        10.1622,
        10.1638,
        10.1654,
        10.1669,
        10.1684,
        10.1699,
        10.1714,
        10.1728,
        10.1742,
        10.1755,
        10.1768,
        10.1781,
        10.1793,
        10.1805,
        10.1817,
        10.1828,
        10.1839,
        10.185,
        10.186,
        10.187,
        10.1879,
        10.1888,
        10.1897,
        10.1905,
        10.1913,
        10.1921,
        10.1928,
        10.1935,
        10.1942,
        10.1948,
        10.1954,
        10.196,
        10.1965,
        10.197,
        10.1974,
        10.1978,
        10.1982,
        10.1986,
        10.1989,
        10.1991,
        10.1994,
        10.1996,
        10.1997,
        10.1998,
        10.1999,
        10.2,
        10.2,
    ]
)
y_right = np.array(
    [
        6.262,
        6.2511,
        6.24017,
        6.22921,
        6.21822,
        6.2072,
        6.19616,
        6.18509,
        6.174,
        6.16288,
        6.15173,
        6.14055,
        6.12935,
        6.11811,
        6.10686,
        6.09557,
        6.08426,
        6.07292,
        6.06156,
        6.05017,
        6.03875,
        6.0273,
        6.01583,
        6.00434,
        5.99281,
        5.98126,
        5.96969,
        5.95808,
        5.94646,
        5.9348,
        5.92312,
        5.91141,
        5.89968,
        5.88792,
        5.87614,
        5.86433,
        5.85249,
        5.84063,
        5.82874,
        5.81683,
        5.80489,
        5.79292,
        5.78094,
        5.76892,
        5.75688,
        5.74481,
        5.73272,
        5.72061,
        5.70847,
        5.6963,
        5.68411,
        5.67189,
        5.65965,
        5.64738,
        5.63509,
        5.62278,
        5.61044,
        5.59807,
        5.58568,
        5.57327,
        5.56083,
        5.54837,
        5.53588,
        5.52337,
        5.51083,
        5.49827,
        5.48569,
        5.47308,
        5.46045,
        5.44779,
        5.43511,
        5.4224,
        5.40968,
        5.39692,
        5.38415,
        5.37135,
        5.35853,
        5.34568,
        5.33281,
        5.31992,
        5.307,
        5.29406,
        5.2811,
        5.26811,
        5.2551,
        5.24207,
        5.22901,
        5.21593,
        5.20283,
        5.18971,
        5.17656,
        5.16339,
        5.1502,
        5.13698,
        5.12374,
        5.11048,
        5.0972,
        5.08389,
        5.07056,
        5.05721,
        5.04384,
        5.03045,
        5.01703,
        5.00359,
        4.99013,
        4.97665,
        4.96314,
        4.94962,
        4.93607,
        4.9225,
        4.90891,
        4.8953,
        4.88166,
        4.86801,
        4.85433,
        4.84063,
        4.82691,
        4.81317,
        4.79941,
        4.78562,
        4.77182,
        4.75799,
        4.74415,
        4.73028,
        4.71639,
        4.70248,
        4.68855,
        4.6746,
        4.66063,
        4.64664,
        4.63263,
        4.6186,
        4.60455,
        4.59047,
        4.57638,
        4.56227,
        4.54814,
        4.53398,
        4.51981,
        4.50562,
        4.49141,
        4.47718,
        4.46292,
        4.44865,
        4.43436,
        4.42005,
        4.40572,
        4.39137,
        4.377,
        4.36262,
        4.34821,
        4.33378,
        4.31934,
        4.30487,
        4.29039,
        4.27589,
        4.26137,
        4.24683,
        4.23227,
        4.2177,
        4.2031,
        4.18849,
        4.17386,
        4.15921,
        4.14454,
        4.12985,
        4.11514,
        4.10042,
        4.08568,
        4.07092,
        4.05615,
        4.04135,
        4.02654,
        4.01171,
        3.99686,
        3.98199,
        3.96711,
        3.95221,
        3.93729,
        3.92236,
        3.90741,
        3.89244,
        3.87745,
        3.86245,
        3.84743,
        3.83239,
        3.81734,
        3.80226,
        3.78718,
        3.77207,
        3.75695,
        3.74181,
        3.72666,
        3.71149,
        3.6963,
        3.6811,
        3.66588,
        3.65065,
        3.6354,
        3.62013,
        3.60485,
        3.58955,
        3.57423,
        3.5589,
        3.54356,
        3.5282,
        3.51282,
        3.49743,
        3.48202,
        3.4666,
        3.45116,
        3.4357,
        3.42024,
        3.40475,
        3.38925,
        3.37374,
        3.35821,
        3.34267,
        3.32711,
        3.31154,
        3.29595,
        3.28035,
        3.26474,
        3.24911,
        3.23346,
        3.2178,
        3.20213,
        3.18644,
        3.17074,
        3.15503,
        3.1393,
        3.12356,
        3.1078,
        3.09203,
        3.07625,
        3.06045,
        3.04464,
        3.02882,
        3.01298,
        2.99713,
        2.98127,
        2.9654,
        2.94951,
        2.9336,
        2.91769,
        2.90176,
        2.88582,
        2.86987,
        2.8539,
        2.83792,
        2.82193,
        2.80593,
        2.78991,
        2.77389,
        2.75785,
        2.7418,
        2.72573,
        2.70966,
        2.69357,
        2.67747,
        2.66136,
        2.64523,
        2.6291,
        2.61295,
        2.5968,
        2.58063,
        2.56445,
        2.54825,
        2.53205,
        2.51584,
        2.49961,
        2.48338,
        2.46713,
        2.45087,
        2.4346,
        2.41833,
        2.40204,
        2.38574,
        2.36943,
        2.3531,
        2.33677,
        2.32043,
        2.30408,
        2.28772,
        2.27135,
        2.25497,
        2.23857,
        2.22217,
        2.20576,
        2.18934,
        2.17291,
        2.15647,
        2.14002,
        2.12356,
        2.10709,
        2.09062,
        2.07413,
        2.05764,
        2.04113,
        2.02462,
        2.0081,
        1.99157,
        1.97503,
        1.95848,
        1.94192,
        1.92535,
        1.90878,
        1.8922,
        1.87561,
        1.85901,
        1.8424,
        1.82579,
        1.80917,
        1.79253,
        1.7759,
        1.75925,
        1.7426,
        1.72593,
        1.70927,
        1.69259,
        1.6759,
        1.65921,
        1.64252,
        1.62581,
        1.6091,
        1.59238,
        1.57565,
        1.55892,
        1.54218,
        1.52543,
        1.50867,
        1.49191,
        1.47515,
        1.45837,
        1.44159,
        1.42481,
        1.40802,
        1.39122,
        1.37441,
        1.3576,
        1.34079,
        1.32396,
        1.30714,
        1.2903,
        1.27346,
        1.25662,
        1.23977,
        1.22291,
        1.20605,
        1.18919,
        1.17232,
        1.15544,
        1.13856,
        1.12167,
        1.10478,
        1.08788,
        1.07098,
        1.05408,
        1.03717,
        1.02025,
        1.00333,
        0.986412,
        0.969484,
        0.952553,
        0.935617,
        0.918677,
        0.901733,
        0.884785,
        0.867834,
        0.850879,
        0.83392,
        0.816957,
        0.799991,
        0.783022,
        0.766049,
        0.749073,
        0.732093,
        0.715111,
        0.698125,
        0.681137,
        0.664145,
        0.647151,
        0.630154,
        0.613154,
        0.596151,
        0.579146,
        0.562139,
        0.545129,
        0.528117,
        0.511102,
        0.494086,
        0.477067,
        0.460046,
        0.443024,
        0.425999,
        0.408973,
        0.391945,
        0.374915,
        0.357884,
        0.340851,
        0.323817,
        0.306782,
        0.289745,
        0.272707,
        0.255668,
        0.238628,
        0.221587,
        0.204545,
        0.187502,
        0.170459,
        0.153415,
        0.13637,
        0.119325,
        0.102279,
        0.085233,
        0.0681867,
        0.0511401,
        0.0340935,
        0.0170467,
        0,
    ]
)
z_right = np.array(
    [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ]
)
p_right_x = np.array(
    [
        0.182809,
        0.182492,
        0.182175,
        0.181856,
        0.181537,
        0.181217,
        0.180897,
        0.180575,
        0.180253,
        0.17993,
        0.179606,
        0.179281,
        0.178956,
        0.178629,
        0.178302,
        0.177975,
        0.177646,
        0.177316,
        0.176986,
        0.176655,
        0.176323,
        0.175991,
        0.175657,
        0.175323,
        0.174988,
        0.174652,
        0.174316,
        0.173979,
        0.173641,
        0.173302,
        0.172962,
        0.172622,
        0.172281,
        0.171939,
        0.171596,
        0.171253,
        0.170908,
        0.170563,
        0.170218,
        0.169871,
        0.169524,
        0.169176,
        0.168827,
        0.168478,
        0.168127,
        0.167776,
        0.167425,
        0.167072,
        0.166719,
        0.166365,
        0.16601,
        0.165655,
        0.165299,
        0.164942,
        0.164584,
        0.164226,
        0.163867,
        0.163507,
        0.163146,
        0.162785,
        0.162423,
        0.16206,
        0.161696,
        0.161332,
        0.160967,
        0.160602,
        0.160235,
        0.159868,
        0.1595,
        0.159132,
        0.158763,
        0.158393,
        0.158022,
        0.157651,
        0.157279,
        0.156906,
        0.156533,
        0.156159,
        0.155784,
        0.155408,
        0.155032,
        0.154655,
        0.154278,
        0.153899,
        0.15352,
        0.153141,
        0.15276,
        0.152379,
        0.151998,
        0.151615,
        0.151232,
        0.150849,
        0.150464,
        0.150079,
        0.149693,
        0.149307,
        0.14892,
        0.148532,
        0.148144,
        0.147755,
        0.147365,
        0.146975,
        0.146584,
        0.146192,
        0.1458,
        0.145407,
        0.145013,
        0.144619,
        0.144224,
        0.143828,
        0.143432,
        0.143035,
        0.142638,
        0.14224,
        0.141841,
        0.141442,
        0.141042,
        0.140641,
        0.14024,
        0.139838,
        0.139436,
        0.139032,
        0.138629,
        0.138224,
        0.137819,
        0.137414,
        0.137007,
        0.136601,
        0.136193,
        0.135785,
        0.135377,
        0.134967,
        0.134557,
        0.134147,
        0.133736,
        0.133324,
        0.132912,
        0.132499,
        0.132086,
        0.131672,
        0.131257,
        0.130842,
        0.130426,
        0.13001,
        0.129593,
        0.129176,
        0.128758,
        0.128339,
        0.12792,
        0.1275,
        0.12708,
        0.126659,
        0.126237,
        0.125815,
        0.125392,
        0.124969,
        0.124546,
        0.124121,
        0.123696,
        0.123271,
        0.122845,
        0.122419,
        0.121992,
        0.121564,
        0.121136,
        0.120707,
        0.120278,
        0.119848,
        0.119418,
        0.118987,
        0.118556,
        0.118124,
        0.117692,
        0.117259,
        0.116825,
        0.116391,
        0.115957,
        0.115522,
        0.115086,
        0.11465,
        0.114214,
        0.113777,
        0.113339,
        0.112901,
        0.112463,
        0.112024,
        0.111584,
        0.111144,
        0.110704,
        0.110263,
        0.109821,
        0.109379,
        0.108937,
        0.108494,
        0.10805,
        0.107606,
        0.107162,
        0.106717,
        0.106271,
        0.105826,
        0.105379,
        0.104932,
        0.104485,
        0.104037,
        0.103589,
        0.103141,
        0.102691,
        0.102242,
        0.101792,
        0.101341,
        0.10089,
        0.100439,
        0.0999873,
        0.099535,
        0.0990823,
        0.0986291,
        0.0981755,
        0.0977215,
        0.097267,
        0.0968121,
        0.0963568,
        0.0959011,
        0.0954449,
        0.0949883,
        0.0945312,
        0.0940738,
        0.0936159,
        0.0931576,
        0.0926989,
        0.0922398,
        0.0917803,
        0.0913203,
        0.09086,
        0.0903993,
        0.0899381,
        0.0894766,
        0.0890146,
        0.0885523,
        0.0880895,
        0.0876264,
        0.0871629,
        0.086699,
        0.0862347,
        0.08577,
        0.085305,
        0.0848396,
        0.0843737,
        0.0839076,
        0.083441,
        0.0829741,
        0.0825068,
        0.0820391,
        0.0815711,
        0.0811027,
        0.0806339,
        0.0801648,
        0.0796954,
        0.0792255,
        0.0787554,
        0.0782848,
        0.077814,
        0.0773428,
        0.0768712,
        0.0763993,
        0.0759271,
        0.0754545,
        0.0749816,
        0.0745083,
        0.0740347,
        0.0735608,
        0.0730866,
        0.0726121,
        0.0721372,
        0.071662,
        0.0711865,
        0.0707106,
        0.0702345,
        0.069758,
        0.0692813,
        0.0688042,
        0.0683268,
        0.0678491,
        0.0673712,
        0.0668929,
        0.0664143,
        0.0659354,
        0.0654563,
        0.0649768,
        0.0644971,
        0.064017,
        0.0635367,
        0.0630561,
        0.0625753,
        0.0620941,
        0.0616127,
        0.061131,
        0.060649,
        0.0601668,
        0.0596843,
        0.0592015,
        0.0587185,
        0.0582352,
        0.0577516,
        0.0572678,
        0.0567838,
        0.0562995,
        0.0558149,
        0.0553301,
        0.0548451,
        0.0543598,
        0.0538742,
        0.0533885,
        0.0529025,
        0.0524162,
        0.0519298,
        0.0514431,
        0.0509561,
        0.050469,
        0.0499816,
        0.049494,
        0.0490062,
        0.0485182,
        0.0480299,
        0.0475415,
        0.0470528,
        0.0465639,
        0.0460749,
        0.0455856,
        0.0450961,
        0.0446064,
        0.0441166,
        0.0436265,
        0.0431362,
        0.0426458,
        0.0421551,
        0.0416643,
        0.0411733,
        0.0406821,
        0.0401907,
        0.0396992,
        0.0392075,
        0.0387156,
        0.0382235,
        0.0377313,
        0.0372389,
        0.0367463,
        0.0362536,
        0.0357607,
        0.0352677,
        0.0347745,
        0.0342812,
        0.0337877,
        0.033294,
        0.0328003,
        0.0323063,
        0.0318123,
        0.0313181,
        0.0308237,
        0.0303292,
        0.0298346,
        0.0293399,
        0.028845,
        0.02835,
        0.0278549,
        0.0273597,
        0.0268643,
        0.0263688,
        0.0258732,
        0.0253775,
        0.0248817,
        0.0243858,
        0.0238898,
        0.0233936,
        0.0228974,
        0.0224011,
        0.0219046,
        0.0214081,
        0.0209115,
        0.0204148,
        0.019918,
        0.0194211,
        0.0189242,
        0.0184271,
        0.01793,
        0.0174328,
        0.0169356,
        0.0164382,
        0.0159408,
        0.0154433,
        0.0149458,
        0.0144482,
        0.0139505,
        0.0134528,
        0.012955,
        0.0124571,
        0.0119592,
        0.0114613,
        0.0109633,
        0.0104653,
        0.00996719,
        0.00946907,
        0.00897091,
        0.00847272,
        0.00797449,
        0.00747623,
        0.00697794,
        0.00647962,
        0.00598128,
        0.00548291,
        0.00498452,
        0.00448612,
        0.0039877,
        0.00348926,
        0.00299081,
        0.00249235,
        0.00199389,
        0.00149542,
        0.000996946,
        0.000498472,
        -0,
    ]
)
p_right_y = np.array(
    [
        -0.151613,
        -0.151995,
        -0.152377,
        -0.152759,
        -0.15314,
        -0.15352,
        -0.153899,
        -0.154278,
        -0.154656,
        -0.155033,
        -0.15541,
        -0.155786,
        -0.156162,
        -0.156536,
        -0.15691,
        -0.157284,
        -0.157656,
        -0.158028,
        -0.1584,
        -0.15877,
        -0.15914,
        -0.159509,
        -0.159878,
        -0.160246,
        -0.160613,
        -0.160979,
        -0.161345,
        -0.16171,
        -0.162074,
        -0.162438,
        -0.162801,
        -0.163163,
        -0.163525,
        -0.163885,
        -0.164246,
        -0.164605,
        -0.164964,
        -0.165321,
        -0.165679,
        -0.166035,
        -0.166391,
        -0.166746,
        -0.1671,
        -0.167454,
        -0.167807,
        -0.168159,
        -0.16851,
        -0.168861,
        -0.16921,
        -0.16956,
        -0.169908,
        -0.170256,
        -0.170603,
        -0.170949,
        -0.171294,
        -0.171639,
        -0.171983,
        -0.172326,
        -0.172668,
        -0.17301,
        -0.173351,
        -0.173691,
        -0.174031,
        -0.174369,
        -0.174707,
        -0.175044,
        -0.175381,
        -0.175716,
        -0.176051,
        -0.176385,
        -0.176718,
        -0.177051,
        -0.177382,
        -0.177713,
        -0.178044,
        -0.178373,
        -0.178702,
        -0.179029,
        -0.179356,
        -0.179683,
        -0.180008,
        -0.180333,
        -0.180657,
        -0.18098,
        -0.181302,
        -0.181624,
        -0.181944,
        -0.182264,
        -0.182583,
        -0.182902,
        -0.183219,
        -0.183536,
        -0.183852,
        -0.184167,
        -0.184481,
        -0.184795,
        -0.185107,
        -0.185419,
        -0.18573,
        -0.18604,
        -0.18635,
        -0.186658,
        -0.186966,
        -0.187273,
        -0.187579,
        -0.187884,
        -0.188189,
        -0.188493,
        -0.188795,
        -0.189097,
        -0.189399,
        -0.189699,
        -0.189998,
        -0.190297,
        -0.190595,
        -0.190892,
        -0.191188,
        -0.191483,
        -0.191778,
        -0.192072,
        -0.192364,
        -0.192656,
        -0.192947,
        -0.193238,
        -0.193527,
        -0.193816,
        -0.194103,
        -0.19439,
        -0.194676,
        -0.194961,
        -0.195246,
        -0.195529,
        -0.195811,
        -0.196093,
        -0.196374,
        -0.196654,
        -0.196933,
        -0.197211,
        -0.197489,
        -0.197765,
        -0.198041,
        -0.198316,
        -0.198589,
        -0.198862,
        -0.199135,
        -0.199406,
        -0.199676,
        -0.199946,
        -0.200214,
        -0.200482,
        -0.200749,
        -0.201015,
        -0.20128,
        -0.201544,
        -0.201808,
        -0.20207,
        -0.202332,
        -0.202592,
        -0.202852,
        -0.203111,
        -0.203369,
        -0.203626,
        -0.203882,
        -0.204137,
        -0.204392,
        -0.204645,
        -0.204898,
        -0.205149,
        -0.2054,
        -0.20565,
        -0.205899,
        -0.206147,
        -0.206394,
        -0.20664,
        -0.206886,
        -0.20713,
        -0.207374,
        -0.207616,
        -0.207858,
        -0.208099,
        -0.208338,
        -0.208577,
        -0.208815,
        -0.209052,
        -0.209289,
        -0.209524,
        -0.209758,
        -0.209991,
        -0.210224,
        -0.210455,
        -0.210686,
        -0.210916,
        -0.211144,
        -0.211372,
        -0.211599,
        -0.211825,
        -0.21205,
        -0.212274,
        -0.212497,
        -0.212719,
        -0.212941,
        -0.213161,
        -0.21338,
        -0.213599,
        -0.213816,
        -0.214033,
        -0.214248,
        -0.214463,
        -0.214677,
        -0.214889,
        -0.215101,
        -0.215312,
        -0.215522,
        -0.215731,
        -0.215939,
        -0.216146,
        -0.216352,
        -0.216557,
        -0.216761,
        -0.216965,
        -0.217167,
        -0.217368,
        -0.217569,
        -0.217768,
        -0.217966,
        -0.218164,
        -0.21836,
        -0.218556,
        -0.21875,
        -0.218944,
        -0.219137,
        -0.219328,
        -0.219519,
        -0.219709,
        -0.219897,
        -0.220085,
        -0.220272,
        -0.220458,
        -0.220643,
        -0.220827,
        -0.22101,
        -0.221192,
        -0.221372,
        -0.221552,
        -0.221731,
        -0.221909,
        -0.222086,
        -0.222263,
        -0.222438,
        -0.222612,
        -0.222785,
        -0.222957,
        -0.223128,
        -0.223298,
        -0.223467,
        -0.223636,
        -0.223803,
        -0.223969,
        -0.224134,
        -0.224298,
        -0.224462,
        -0.224624,
        -0.224785,
        -0.224945,
        -0.225105,
        -0.225263,
        -0.22542,
        -0.225576,
        -0.225732,
        -0.225886,
        -0.226039,
        -0.226191,
        -0.226343,
        -0.226493,
        -0.226642,
        -0.22679,
        -0.226938,
        -0.227084,
        -0.227229,
        -0.227373,
        -0.227517,
        -0.227659,
        -0.2278,
        -0.22794,
        -0.228079,
        -0.228218,
        -0.228355,
        -0.228491,
        -0.228626,
        -0.22876,
        -0.228894,
        -0.229026,
        -0.229157,
        -0.229287,
        -0.229416,
        -0.229544,
        -0.229671,
        -0.229797,
        -0.229922,
        -0.230046,
        -0.230169,
        -0.230291,
        -0.230412,
        -0.230532,
        -0.230651,
        -0.230769,
        -0.230886,
        -0.231001,
        -0.231116,
        -0.23123,
        -0.231343,
        -0.231455,
        -0.231565,
        -0.231675,
        -0.231784,
        -0.231891,
        -0.231998,
        -0.232104,
        -0.232208,
        -0.232312,
        -0.232414,
        -0.232516,
        -0.232616,
        -0.232716,
        -0.232814,
        -0.232911,
        -0.233008,
        -0.233103,
        -0.233197,
        -0.233291,
        -0.233383,
        -0.233474,
        -0.233564,
        -0.233653,
        -0.233741,
        -0.233828,
        -0.233914,
        -0.233999,
        -0.234083,
        -0.234166,
        -0.234248,
        -0.234329,
        -0.234409,
        -0.234487,
        -0.234565,
        -0.234642,
        -0.234717,
        -0.234792,
        -0.234866,
        -0.234938,
        -0.23501,
        -0.23508,
        -0.235149,
        -0.235218,
        -0.235285,
        -0.235351,
        -0.235417,
        -0.235481,
        -0.235544,
        -0.235606,
        -0.235667,
        -0.235727,
        -0.235786,
        -0.235844,
        -0.235901,
        -0.235957,
        -0.236011,
        -0.236065,
        -0.236118,
        -0.23617,
        -0.23622,
        -0.23627,
        -0.236318,
        -0.236366,
        -0.236412,
        -0.236458,
        -0.236502,
        -0.236545,
        -0.236587,
        -0.236629,
        -0.236669,
        -0.236708,
        -0.236746,
        -0.236783,
        -0.236819,
        -0.236854,
        -0.236888,
        -0.23692,
        -0.236952,
        -0.236983,
        -0.237013,
        -0.237041,
        -0.237069,
        -0.237095,
        -0.237121,
        -0.237145,
        -0.237168,
        -0.237191,
        -0.237212,
        -0.237232,
        -0.237251,
        -0.23727,
        -0.237287,
        -0.237303,
        -0.237318,
        -0.237332,
        -0.237344,
        -0.237356,
        -0.237367,
        -0.237377,
        -0.237385,
        -0.237393,
        -0.237399,
        -0.237405,
        -0.237409,
        -0.237413,
        -0.237415,
        -0.237416,
        -0.237417,
        -0.237416,
    ]
)
p_right_z = np.array(
    [
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
    ]
)
p_left_dt_x = np.array(
    [
        0.00316233,
        0.00317046,
        0.00317857,
        0.00318666,
        0.00319475,
        0.00320282,
        0.00321087,
        0.00321891,
        0.00322694,
        0.00323496,
        0.00324295,
        0.00325094,
        0.00325891,
        0.00326687,
        0.00327481,
        0.00328274,
        0.00329065,
        0.00329855,
        0.00330643,
        0.0033143,
        0.00332216,
        0.00333,
        0.00333783,
        0.00334564,
        0.00335343,
        0.00336122,
        0.00336898,
        0.00337674,
        0.00338448,
        0.0033922,
        0.00339991,
        0.0034076,
        0.00341528,
        0.00342294,
        0.00343059,
        0.00343822,
        0.00344584,
        0.00345344,
        0.00346103,
        0.0034686,
        0.00347616,
        0.0034837,
        0.00349123,
        0.00349874,
        0.00350623,
        0.00351371,
        0.00352118,
        0.00352863,
        0.00353606,
        0.00354348,
        0.00355088,
        0.00355827,
        0.00356564,
        0.00357299,
        0.00358033,
        0.00358766,
        0.00359496,
        0.00360225,
        0.00360953,
        0.00361679,
        0.00362403,
        0.00363126,
        0.00363847,
        0.00364567,
        0.00365285,
        0.00366001,
        0.00366716,
        0.00367429,
        0.00368141,
        0.00368851,
        0.00369559,
        0.00370265,
        0.0037097,
        0.00371674,
        0.00372375,
        0.00373075,
        0.00373774,
        0.0037447,
        0.00375165,
        0.00375859,
        0.0037655,
        0.0037724,
        0.00377929,
        0.00378616,
        0.00379301,
        0.00379984,
        0.00380666,
        0.00381346,
        0.00382024,
        0.003827,
        0.00383375,
        0.00384048,
        0.0038472,
        0.0038539,
        0.00386058,
        0.00386724,
        0.00387389,
        0.00388051,
        0.00388713,
        0.00389372,
        0.0039003,
        0.00390686,
        0.0039134,
        0.00391993,
        0.00392643,
        0.00393292,
        0.0039394,
        0.00394585,
        0.00395229,
        0.00395871,
        0.00396511,
        0.00397149,
        0.00397786,
        0.00398421,
        0.00399054,
        0.00399686,
        0.00400315,
        0.00400943,
        0.00401569,
        0.00402193,
        0.00402816,
        0.00403436,
        0.00404055,
        0.00404672,
        0.00405288,
        0.00405901,
        0.00406513,
        0.00407123,
        0.00407731,
        0.00408337,
        0.00408941,
        0.00409544,
        0.00410144,
        0.00410743,
        0.0041134,
        0.00411936,
        0.00412529,
        0.0041312,
        0.0041371,
        0.00414298,
        0.00414884,
        0.00415468,
        0.00416051,
        0.00416631,
        0.0041721,
        0.00417786,
        0.00418361,
        0.00418934,
        0.00419505,
        0.00420074,
        0.00420642,
        0.00421207,
        0.00421771,
        0.00422333,
        0.00422893,
        0.0042345,
        0.00424007,
        0.00424561,
        0.00425113,
        0.00425663,
        0.00426212,
        0.00426758,
        0.00427303,
        0.00427846,
        0.00428386,
        0.00428925,
        0.00429462,
        0.00429997,
        0.00430531,
        0.00431062,
        0.00431591,
        0.00432118,
        0.00432644,
        0.00433167,
        0.00433689,
        0.00434208,
        0.00434726,
        0.00435242,
        0.00435756,
        0.00436267,
        0.00436777,
        0.00437285,
        0.00437791,
        0.00438295,
        0.00438797,
        0.00439297,
        0.00439795,
        0.00440291,
        0.00440786,
        0.00441278,
        0.00441768,
        0.00442256,
        0.00442742,
        0.00443227,
        0.00443709,
        0.00444189,
        0.00444668,
        0.00445144,
        0.00445618,
        0.00446091,
        0.00446561,
        0.00447029,
        0.00447495,
        0.0044796,
        0.00448422,
        0.00448882,
        0.00449341,
        0.00449797,
        0.00450251,
        0.00450703,
        0.00451154,
        0.00451602,
        0.00452048,
        0.00452492,
        0.00452934,
        0.00453374,
        0.00453812,
        0.00454248,
        0.00454682,
        0.00455114,
        0.00455544,
        0.00455972,
        0.00456398,
        0.00456821,
        0.00457243,
        0.00457663,
        0.0045808,
        0.00458496,
        0.00458909,
        0.00459321,
        0.0045973,
        0.00460137,
        0.00460543,
        0.00460946,
        0.00461347,
        0.00461746,
        0.00462143,
        0.00462538,
        0.0046293,
        0.00463321,
        0.0046371,
        0.00464096,
        0.00464481,
        0.00464863,
        0.00465244,
        0.00465622,
        0.00465998,
        0.00466372,
        0.00466744,
        0.00467114,
        0.00467481,
        0.00467847,
        0.00468211,
        0.00468572,
        0.00468931,
        0.00469289,
        0.00469644,
        0.00469997,
        0.00470348,
        0.00470696,
        0.00471043,
        0.00471388,
        0.0047173,
        0.00472071,
        0.00472409,
        0.00472745,
        0.00473079,
        0.00473411,
        0.0047374,
        0.00474068,
        0.00474393,
        0.00474717,
        0.00475038,
        0.00475357,
        0.00475674,
        0.00475989,
        0.00476301,
        0.00476612,
        0.0047692,
        0.00477226,
        0.00477531,
        0.00477832,
        0.00478132,
        0.0047843,
        0.00478725,
        0.00479019,
        0.0047931,
        0.00479599,
        0.00479886,
        0.00480171,
        0.00480453,
        0.00480734,
        0.00481012,
        0.00481288,
        0.00481562,
        0.00481834,
        0.00482103,
        0.00482371,
        0.00482636,
        0.00482899,
        0.0048316,
        0.00483419,
        0.00483675,
        0.0048393,
        0.00484182,
        0.00484432,
        0.0048468,
        0.00484926,
        0.00485169,
        0.0048541,
        0.0048565,
        0.00485887,
        0.00486121,
        0.00486354,
        0.00486584,
        0.00486813,
        0.00487039,
        0.00487263,
        0.00487484,
        0.00487704,
        0.00487921,
        0.00488136,
        0.00488349,
        0.0048856,
        0.00488768,
        0.00488975,
        0.00489179,
        0.00489381,
        0.0048958,
        0.00489778,
        0.00489973,
        0.00490167,
        0.00490357,
        0.00490546,
        0.00490733,
        0.00490917,
        0.00491099,
        0.00491279,
        0.00491457,
        0.00491632,
        0.00491806,
        0.00491977,
        0.00492146,
        0.00492312,
        0.00492477,
        0.00492639,
        0.00492799,
        0.00492957,
        0.00493112,
        0.00493266,
        0.00493417,
        0.00493566,
        0.00493713,
        0.00493857,
        0.00493999,
        0.00494139,
        0.00494277,
        0.00494413,
        0.00494546,
        0.00494678,
        0.00494807,
        0.00494933,
        0.00495058,
        0.0049518,
        0.004953,
        0.00495418,
        0.00495534,
        0.00495647,
        0.00495758,
        0.00495867,
        0.00495974,
        0.00496079,
        0.00496181,
        0.00496281,
        0.00496379,
        0.00496474,
        0.00496568,
        0.00496659,
        0.00496748,
        0.00496834,
        0.00496919,
        0.00497001,
        0.00497081,
        0.00497159,
        0.00497234,
        0.00497308,
        0.00497379,
        0.00497448,
        0.00497514,
        0.00497579,
        0.00497641,
        0.00497701,
        0.00497758,
        0.00497814,
        0.00497867,
        0.00497918,
        0.00497967,
        0.00498013,
        0.00498057,
        0.00498099,
        0.00498139,
        0.00498177,
        0.00498212,
        0.00498245,
        0.00498276,
        0.00498305,
        0.00498331,
        0.00498355,
        0.00498377,
        0.00498397,
        0.00498414,
        0.00498429,
        0.00498442,
        0.00498453,
        0.00498462,
        0.00498468,
        0.00498472,
        0.00498474,
        0.00498473,
        0.00498471,
    ]
)
p_left_dt_y = np.array(
    [
        0.00383078,
        0.00382419,
        0.00381758,
        0.00381096,
        0.00380432,
        0.00379765,
        0.00379098,
        0.00378428,
        0.00377757,
        0.00377084,
        0.00376409,
        0.00375733,
        0.00375055,
        0.00374375,
        0.00373693,
        0.0037301,
        0.00372325,
        0.00371638,
        0.0037095,
        0.00370259,
        0.00369567,
        0.00368874,
        0.00368179,
        0.00367482,
        0.00366783,
        0.00366083,
        0.00365381,
        0.00364677,
        0.00363972,
        0.00363265,
        0.00362556,
        0.00361846,
        0.00361134,
        0.0036042,
        0.00359705,
        0.00358988,
        0.00358269,
        0.00357549,
        0.00356827,
        0.00356103,
        0.00355378,
        0.00354651,
        0.00353923,
        0.00353193,
        0.00352461,
        0.00351728,
        0.00350993,
        0.00350256,
        0.00349518,
        0.00348778,
        0.00348037,
        0.00347294,
        0.00346549,
        0.00345803,
        0.00345055,
        0.00344306,
        0.00343555,
        0.00342802,
        0.00342048,
        0.00341293,
        0.00340535,
        0.00339777,
        0.00339016,
        0.00338254,
        0.00337491,
        0.00336726,
        0.00335959,
        0.00335191,
        0.00334422,
        0.0033365,
        0.00332878,
        0.00332103,
        0.00331328,
        0.0033055,
        0.00329772,
        0.00328991,
        0.00328209,
        0.00327426,
        0.00326641,
        0.00325855,
        0.00325067,
        0.00324278,
        0.00323487,
        0.00322694,
        0.00321901,
        0.00321105,
        0.00320309,
        0.0031951,
        0.00318711,
        0.00317909,
        0.00317107,
        0.00316303,
        0.00315497,
        0.0031469,
        0.00313882,
        0.00313072,
        0.00312261,
        0.00311448,
        0.00310634,
        0.00309818,
        0.00309001,
        0.00308182,
        0.00307363,
        0.00306541,
        0.00305719,
        0.00304895,
        0.00304069,
        0.00303242,
        0.00302414,
        0.00301584,
        0.00300753,
        0.00299921,
        0.00299087,
        0.00298252,
        0.00297415,
        0.00296577,
        0.00295738,
        0.00294897,
        0.00294055,
        0.00293212,
        0.00292367,
        0.00291521,
        0.00290673,
        0.00289825,
        0.00288975,
        0.00288123,
        0.0028727,
        0.00286416,
        0.00285561,
        0.00284704,
        0.00283846,
        0.00282987,
        0.00282127,
        0.00281265,
        0.00280401,
        0.00279537,
        0.00278671,
        0.00277804,
        0.00276936,
        0.00276066,
        0.00275196,
        0.00274323,
        0.0027345,
        0.00272575,
        0.002717,
        0.00270822,
        0.00269944,
        0.00269064,
        0.00268184,
        0.00267301,
        0.00266418,
        0.00265534,
        0.00264648,
        0.00263761,
        0.00262873,
        0.00261983,
        0.00261093,
        0.00260201,
        0.00259308,
        0.00258414,
        0.00257519,
        0.00256622,
        0.00255724,
        0.00254825,
        0.00253925,
        0.00253024,
        0.00252122,
        0.00251218,
        0.00250313,
        0.00249408,
        0.00248501,
        0.00247592,
        0.00246683,
        0.00245773,
        0.00244861,
        0.00243949,
        0.00243035,
        0.0024212,
        0.00241204,
        0.00240287,
        0.00239369,
        0.00238449,
        0.00237529,
        0.00236607,
        0.00235685,
        0.00234761,
        0.00233837,
        0.00232911,
        0.00231984,
        0.00231056,
        0.00230127,
        0.00229197,
        0.00228266,
        0.00227334,
        0.002264,
        0.00225466,
        0.00224531,
        0.00223595,
        0.00222657,
        0.00221719,
        0.0022078,
        0.00219839,
        0.00218898,
        0.00217955,
        0.00217012,
        0.00216068,
        0.00215122,
        0.00214176,
        0.00213229,
        0.0021228,
        0.00211331,
        0.00210381,
        0.0020943,
        0.00208477,
        0.00207524,
        0.0020657,
        0.00205615,
        0.00204659,
        0.00203702,
        0.00202745,
        0.00201786,
        0.00200826,
        0.00199866,
        0.00198904,
        0.00197942,
        0.00196978,
        0.00196014,
        0.00195049,
        0.00194083,
        0.00193116,
        0.00192148,
        0.00191179,
        0.0019021,
        0.0018924,
        0.00188268,
        0.00187296,
        0.00186323,
        0.00185349,
        0.00184375,
        0.00183399,
        0.00182423,
        0.00181445,
        0.00180467,
        0.00179488,
        0.00178509,
        0.00177528,
        0.00176547,
        0.00175565,
        0.00174582,
        0.00173598,
        0.00172614,
        0.00171628,
        0.00170642,
        0.00169655,
        0.00168668,
        0.00167679,
        0.0016669,
        0.001657,
        0.00164709,
        0.00163718,
        0.00162726,
        0.00161733,
        0.00160739,
        0.00159745,
        0.0015875,
        0.00157754,
        0.00156757,
        0.0015576,
        0.00154762,
        0.00153763,
        0.00152764,
        0.00151764,
        0.00150763,
        0.00149761,
        0.00148759,
        0.00147756,
        0.00146753,
        0.00145749,
        0.00144744,
        0.00143738,
        0.00142732,
        0.00141725,
        0.00140718,
        0.0013971,
        0.00138701,
        0.00137692,
        0.00136682,
        0.00135671,
        0.0013466,
        0.00133648,
        0.00132635,
        0.00131622,
        0.00130609,
        0.00129595,
        0.0012858,
        0.00127564,
        0.00126548,
        0.00125532,
        0.00124515,
        0.00123497,
        0.00122479,
        0.0012146,
        0.0012044,
        0.0011942,
        0.001184,
        0.00117379,
        0.00116357,
        0.00115335,
        0.00114313,
        0.0011329,
        0.00112266,
        0.00111242,
        0.00110217,
        0.00109192,
        0.00108167,
        0.0010714,
        0.00106114,
        0.00105087,
        0.00104059,
        0.00103031,
        0.00102003,
        0.00100974,
        0.000999444,
        0.000989145,
        0.000978842,
        0.000968535,
        0.000958223,
        0.000947907,
        0.000937587,
        0.000927262,
        0.000916933,
        0.0009066,
        0.000896263,
        0.000885922,
        0.000875577,
        0.000865228,
        0.000854875,
        0.000844518,
        0.000834158,
        0.000823794,
        0.000813426,
        0.000803054,
        0.000792679,
        0.0007823,
        0.000771918,
        0.000761532,
        0.000751143,
        0.00074075,
        0.000730354,
        0.000719955,
        0.000709553,
        0.000699147,
        0.000688739,
        0.000678327,
        0.000667912,
        0.000657494,
        0.000647074,
        0.00063665,
        0.000626224,
        0.000615794,
        0.000605362,
        0.000594928,
        0.000584491,
        0.000574051,
        0.000563608,
        0.000553163,
        0.000542716,
        0.000532266,
        0.000521814,
        0.00051136,
        0.000500903,
        0.000490444,
        0.000479983,
        0.00046952,
        0.000459054,
        0.000448587,
        0.000438118,
        0.000427647,
        0.000417174,
        0.000406699,
        0.000396222,
        0.000385744,
        0.000375264,
        0.000364782,
        0.000354299,
        0.000343814,
        0.000333328,
        0.00032284,
        0.000312351,
        0.000301861,
        0.000291369,
        0.000280876,
        0.000270382,
        0.000259886,
        0.00024939,
        0.000238892,
        0.000228394,
        0.000217895,
        0.000207394,
        0.000196893,
        0.000186391,
        0.000175888,
        0.000165385,
        0.00015488,
        0.000144376,
        0.00013387,
        0.000123364,
        0.000112858,
        0.000102351,
        9.18442e-05,
        8.13368e-05,
        7.0829e-05,
        6.0321e-05,
        4.98129e-05,
        3.93046e-05,
        2.87962e-05,
        1.82878e-05,
        7.77934e-06,
        -2.72902e-06,
        -1.32373e-05,
    ]
)
p_left_dt_z = np.array(
    [
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
        -0,
    ]
)
p_right_dt_x = np.array(
    [
        -0.00316233,
        -0.00317046,
        -0.00317857,
        -0.00318666,
        -0.00319475,
        -0.00320282,
        -0.00321087,
        -0.00321891,
        -0.00322694,
        -0.00323496,
        -0.00324295,
        -0.00325094,
        -0.00325891,
        -0.00326687,
        -0.00327481,
        -0.00328274,
        -0.00329065,
        -0.00329855,
        -0.00330643,
        -0.0033143,
        -0.00332216,
        -0.00333,
        -0.00333783,
        -0.00334564,
        -0.00335343,
        -0.00336122,
        -0.00336898,
        -0.00337674,
        -0.00338448,
        -0.0033922,
        -0.00339991,
        -0.0034076,
        -0.00341528,
        -0.00342294,
        -0.00343059,
        -0.00343822,
        -0.00344584,
        -0.00345344,
        -0.00346103,
        -0.0034686,
        -0.00347616,
        -0.0034837,
        -0.00349123,
        -0.00349874,
        -0.00350623,
        -0.00351371,
        -0.00352118,
        -0.00352863,
        -0.00353606,
        -0.00354348,
        -0.00355088,
        -0.00355827,
        -0.00356564,
        -0.00357299,
        -0.00358033,
        -0.00358766,
        -0.00359496,
        -0.00360225,
        -0.00360953,
        -0.00361679,
        -0.00362403,
        -0.00363126,
        -0.00363847,
        -0.00364567,
        -0.00365285,
        -0.00366001,
        -0.00366716,
        -0.00367429,
        -0.00368141,
        -0.00368851,
        -0.00369559,
        -0.00370265,
        -0.0037097,
        -0.00371674,
        -0.00372375,
        -0.00373075,
        -0.00373774,
        -0.0037447,
        -0.00375165,
        -0.00375859,
        -0.0037655,
        -0.0037724,
        -0.00377929,
        -0.00378616,
        -0.00379301,
        -0.00379984,
        -0.00380666,
        -0.00381346,
        -0.00382024,
        -0.003827,
        -0.00383375,
        -0.00384048,
        -0.0038472,
        -0.0038539,
        -0.00386058,
        -0.00386724,
        -0.00387389,
        -0.00388051,
        -0.00388713,
        -0.00389372,
        -0.0039003,
        -0.00390686,
        -0.0039134,
        -0.00391993,
        -0.00392643,
        -0.00393292,
        -0.0039394,
        -0.00394585,
        -0.00395229,
        -0.00395871,
        -0.00396511,
        -0.00397149,
        -0.00397786,
        -0.00398421,
        -0.00399054,
        -0.00399686,
        -0.00400315,
        -0.00400943,
        -0.00401569,
        -0.00402193,
        -0.00402816,
        -0.00403436,
        -0.00404055,
        -0.00404672,
        -0.00405288,
        -0.00405901,
        -0.00406513,
        -0.00407123,
        -0.00407731,
        -0.00408337,
        -0.00408941,
        -0.00409544,
        -0.00410144,
        -0.00410743,
        -0.0041134,
        -0.00411936,
        -0.00412529,
        -0.0041312,
        -0.0041371,
        -0.00414298,
        -0.00414884,
        -0.00415468,
        -0.00416051,
        -0.00416631,
        -0.0041721,
        -0.00417786,
        -0.00418361,
        -0.00418934,
        -0.00419505,
        -0.00420074,
        -0.00420642,
        -0.00421207,
        -0.00421771,
        -0.00422333,
        -0.00422893,
        -0.0042345,
        -0.00424007,
        -0.00424561,
        -0.00425113,
        -0.00425663,
        -0.00426212,
        -0.00426758,
        -0.00427303,
        -0.00427846,
        -0.00428386,
        -0.00428925,
        -0.00429462,
        -0.00429997,
        -0.00430531,
        -0.00431062,
        -0.00431591,
        -0.00432118,
        -0.00432644,
        -0.00433167,
        -0.00433689,
        -0.00434208,
        -0.00434726,
        -0.00435242,
        -0.00435756,
        -0.00436267,
        -0.00436777,
        -0.00437285,
        -0.00437791,
        -0.00438295,
        -0.00438797,
        -0.00439297,
        -0.00439795,
        -0.00440291,
        -0.00440786,
        -0.00441278,
        -0.00441768,
        -0.00442256,
        -0.00442742,
        -0.00443227,
        -0.00443709,
        -0.00444189,
        -0.00444668,
        -0.00445144,
        -0.00445618,
        -0.00446091,
        -0.00446561,
        -0.00447029,
        -0.00447495,
        -0.0044796,
        -0.00448422,
        -0.00448882,
        -0.00449341,
        -0.00449797,
        -0.00450251,
        -0.00450703,
        -0.00451154,
        -0.00451602,
        -0.00452048,
        -0.00452492,
        -0.00452934,
        -0.00453374,
        -0.00453812,
        -0.00454248,
        -0.00454682,
        -0.00455114,
        -0.00455544,
        -0.00455972,
        -0.00456398,
        -0.00456821,
        -0.00457243,
        -0.00457663,
        -0.0045808,
        -0.00458496,
        -0.00458909,
        -0.00459321,
        -0.0045973,
        -0.00460137,
        -0.00460543,
        -0.00460946,
        -0.00461347,
        -0.00461746,
        -0.00462143,
        -0.00462538,
        -0.0046293,
        -0.00463321,
        -0.0046371,
        -0.00464096,
        -0.00464481,
        -0.00464863,
        -0.00465244,
        -0.00465622,
        -0.00465998,
        -0.00466372,
        -0.00466744,
        -0.00467114,
        -0.00467481,
        -0.00467847,
        -0.00468211,
        -0.00468572,
        -0.00468931,
        -0.00469289,
        -0.00469644,
        -0.00469997,
        -0.00470348,
        -0.00470696,
        -0.00471043,
        -0.00471388,
        -0.0047173,
        -0.00472071,
        -0.00472409,
        -0.00472745,
        -0.00473079,
        -0.00473411,
        -0.0047374,
        -0.00474068,
        -0.00474393,
        -0.00474717,
        -0.00475038,
        -0.00475357,
        -0.00475674,
        -0.00475989,
        -0.00476301,
        -0.00476612,
        -0.0047692,
        -0.00477226,
        -0.00477531,
        -0.00477832,
        -0.00478132,
        -0.0047843,
        -0.00478725,
        -0.00479019,
        -0.0047931,
        -0.00479599,
        -0.00479886,
        -0.00480171,
        -0.00480453,
        -0.00480734,
        -0.00481012,
        -0.00481288,
        -0.00481562,
        -0.00481834,
        -0.00482103,
        -0.00482371,
        -0.00482636,
        -0.00482899,
        -0.0048316,
        -0.00483419,
        -0.00483675,
        -0.0048393,
        -0.00484182,
        -0.00484432,
        -0.0048468,
        -0.00484926,
        -0.00485169,
        -0.0048541,
        -0.0048565,
        -0.00485887,
        -0.00486121,
        -0.00486354,
        -0.00486584,
        -0.00486813,
        -0.00487039,
        -0.00487263,
        -0.00487484,
        -0.00487704,
        -0.00487921,
        -0.00488136,
        -0.00488349,
        -0.0048856,
        -0.00488768,
        -0.00488975,
        -0.00489179,
        -0.00489381,
        -0.0048958,
        -0.00489778,
        -0.00489973,
        -0.00490167,
        -0.00490357,
        -0.00490546,
        -0.00490733,
        -0.00490917,
        -0.00491099,
        -0.00491279,
        -0.00491457,
        -0.00491632,
        -0.00491806,
        -0.00491977,
        -0.00492146,
        -0.00492312,
        -0.00492477,
        -0.00492639,
        -0.00492799,
        -0.00492957,
        -0.00493112,
        -0.00493266,
        -0.00493417,
        -0.00493566,
        -0.00493713,
        -0.00493857,
        -0.00493999,
        -0.00494139,
        -0.00494277,
        -0.00494413,
        -0.00494546,
        -0.00494678,
        -0.00494807,
        -0.00494933,
        -0.00495058,
        -0.0049518,
        -0.004953,
        -0.00495418,
        -0.00495534,
        -0.00495647,
        -0.00495758,
        -0.00495867,
        -0.00495974,
        -0.00496079,
        -0.00496181,
        -0.00496281,
        -0.00496379,
        -0.00496474,
        -0.00496568,
        -0.00496659,
        -0.00496748,
        -0.00496834,
        -0.00496919,
        -0.00497001,
        -0.00497081,
        -0.00497159,
        -0.00497234,
        -0.00497308,
        -0.00497379,
        -0.00497448,
        -0.00497514,
        -0.00497579,
        -0.00497641,
        -0.00497701,
        -0.00497758,
        -0.00497814,
        -0.00497867,
        -0.00497918,
        -0.00497967,
        -0.00498013,
        -0.00498057,
        -0.00498099,
        -0.00498139,
        -0.00498177,
        -0.00498212,
        -0.00498245,
        -0.00498276,
        -0.00498305,
        -0.00498331,
        -0.00498355,
        -0.00498377,
        -0.00498397,
        -0.00498414,
        -0.00498429,
        -0.00498442,
        -0.00498453,
        -0.00498462,
        -0.00498468,
        -0.00498472,
        -0.00498474,
        -0.00498473,
        -0.00498471,
    ]
)
p_right_dt_y = np.array(
    [
        -0.00383078,
        -0.00382419,
        -0.00381758,
        -0.00381096,
        -0.00380432,
        -0.00379765,
        -0.00379098,
        -0.00378428,
        -0.00377757,
        -0.00377084,
        -0.00376409,
        -0.00375733,
        -0.00375055,
        -0.00374375,
        -0.00373693,
        -0.0037301,
        -0.00372325,
        -0.00371638,
        -0.0037095,
        -0.00370259,
        -0.00369567,
        -0.00368874,
        -0.00368179,
        -0.00367482,
        -0.00366783,
        -0.00366083,
        -0.00365381,
        -0.00364677,
        -0.00363972,
        -0.00363265,
        -0.00362556,
        -0.00361846,
        -0.00361134,
        -0.0036042,
        -0.00359705,
        -0.00358988,
        -0.00358269,
        -0.00357549,
        -0.00356827,
        -0.00356103,
        -0.00355378,
        -0.00354651,
        -0.00353923,
        -0.00353193,
        -0.00352461,
        -0.00351728,
        -0.00350993,
        -0.00350256,
        -0.00349518,
        -0.00348778,
        -0.00348037,
        -0.00347294,
        -0.00346549,
        -0.00345803,
        -0.00345055,
        -0.00344306,
        -0.00343555,
        -0.00342802,
        -0.00342048,
        -0.00341293,
        -0.00340535,
        -0.00339777,
        -0.00339016,
        -0.00338254,
        -0.00337491,
        -0.00336726,
        -0.00335959,
        -0.00335191,
        -0.00334422,
        -0.0033365,
        -0.00332878,
        -0.00332103,
        -0.00331328,
        -0.0033055,
        -0.00329772,
        -0.00328991,
        -0.00328209,
        -0.00327426,
        -0.00326641,
        -0.00325855,
        -0.00325067,
        -0.00324278,
        -0.00323487,
        -0.00322694,
        -0.00321901,
        -0.00321105,
        -0.00320309,
        -0.0031951,
        -0.00318711,
        -0.00317909,
        -0.00317107,
        -0.00316303,
        -0.00315497,
        -0.0031469,
        -0.00313882,
        -0.00313072,
        -0.00312261,
        -0.00311448,
        -0.00310634,
        -0.00309818,
        -0.00309001,
        -0.00308182,
        -0.00307363,
        -0.00306541,
        -0.00305719,
        -0.00304895,
        -0.00304069,
        -0.00303242,
        -0.00302414,
        -0.00301584,
        -0.00300753,
        -0.00299921,
        -0.00299087,
        -0.00298252,
        -0.00297415,
        -0.00296577,
        -0.00295738,
        -0.00294897,
        -0.00294055,
        -0.00293212,
        -0.00292367,
        -0.00291521,
        -0.00290673,
        -0.00289825,
        -0.00288975,
        -0.00288123,
        -0.0028727,
        -0.00286416,
        -0.00285561,
        -0.00284704,
        -0.00283846,
        -0.00282987,
        -0.00282127,
        -0.00281265,
        -0.00280401,
        -0.00279537,
        -0.00278671,
        -0.00277804,
        -0.00276936,
        -0.00276066,
        -0.00275196,
        -0.00274323,
        -0.0027345,
        -0.00272575,
        -0.002717,
        -0.00270822,
        -0.00269944,
        -0.00269064,
        -0.00268184,
        -0.00267301,
        -0.00266418,
        -0.00265534,
        -0.00264648,
        -0.00263761,
        -0.00262873,
        -0.00261983,
        -0.00261093,
        -0.00260201,
        -0.00259308,
        -0.00258414,
        -0.00257519,
        -0.00256622,
        -0.00255724,
        -0.00254825,
        -0.00253925,
        -0.00253024,
        -0.00252122,
        -0.00251218,
        -0.00250313,
        -0.00249408,
        -0.00248501,
        -0.00247592,
        -0.00246683,
        -0.00245773,
        -0.00244861,
        -0.00243949,
        -0.00243035,
        -0.0024212,
        -0.00241204,
        -0.00240287,
        -0.00239369,
        -0.00238449,
        -0.00237529,
        -0.00236607,
        -0.00235685,
        -0.00234761,
        -0.00233837,
        -0.00232911,
        -0.00231984,
        -0.00231056,
        -0.00230127,
        -0.00229197,
        -0.00228266,
        -0.00227334,
        -0.002264,
        -0.00225466,
        -0.00224531,
        -0.00223595,
        -0.00222657,
        -0.00221719,
        -0.0022078,
        -0.00219839,
        -0.00218898,
        -0.00217955,
        -0.00217012,
        -0.00216068,
        -0.00215122,
        -0.00214176,
        -0.00213229,
        -0.0021228,
        -0.00211331,
        -0.00210381,
        -0.0020943,
        -0.00208477,
        -0.00207524,
        -0.0020657,
        -0.00205615,
        -0.00204659,
        -0.00203702,
        -0.00202745,
        -0.00201786,
        -0.00200826,
        -0.00199866,
        -0.00198904,
        -0.00197942,
        -0.00196978,
        -0.00196014,
        -0.00195049,
        -0.00194083,
        -0.00193116,
        -0.00192148,
        -0.00191179,
        -0.0019021,
        -0.0018924,
        -0.00188268,
        -0.00187296,
        -0.00186323,
        -0.00185349,
        -0.00184375,
        -0.00183399,
        -0.00182423,
        -0.00181445,
        -0.00180467,
        -0.00179488,
        -0.00178509,
        -0.00177528,
        -0.00176547,
        -0.00175565,
        -0.00174582,
        -0.00173598,
        -0.00172614,
        -0.00171628,
        -0.00170642,
        -0.00169655,
        -0.00168668,
        -0.00167679,
        -0.0016669,
        -0.001657,
        -0.00164709,
        -0.00163718,
        -0.00162726,
        -0.00161733,
        -0.00160739,
        -0.00159745,
        -0.0015875,
        -0.00157754,
        -0.00156757,
        -0.0015576,
        -0.00154762,
        -0.00153763,
        -0.00152764,
        -0.00151764,
        -0.00150763,
        -0.00149761,
        -0.00148759,
        -0.00147756,
        -0.00146753,
        -0.00145749,
        -0.00144744,
        -0.00143738,
        -0.00142732,
        -0.00141725,
        -0.00140718,
        -0.0013971,
        -0.00138701,
        -0.00137692,
        -0.00136682,
        -0.00135671,
        -0.0013466,
        -0.00133648,
        -0.00132635,
        -0.00131622,
        -0.00130609,
        -0.00129595,
        -0.0012858,
        -0.00127564,
        -0.00126548,
        -0.00125532,
        -0.00124515,
        -0.00123497,
        -0.00122479,
        -0.0012146,
        -0.0012044,
        -0.0011942,
        -0.001184,
        -0.00117379,
        -0.00116357,
        -0.00115335,
        -0.00114313,
        -0.0011329,
        -0.00112266,
        -0.00111242,
        -0.00110217,
        -0.00109192,
        -0.00108167,
        -0.0010714,
        -0.00106114,
        -0.00105087,
        -0.00104059,
        -0.00103031,
        -0.00102003,
        -0.00100974,
        -0.000999444,
        -0.000989145,
        -0.000978842,
        -0.000968535,
        -0.000958223,
        -0.000947907,
        -0.000937587,
        -0.000927262,
        -0.000916933,
        -0.0009066,
        -0.000896263,
        -0.000885922,
        -0.000875577,
        -0.000865228,
        -0.000854875,
        -0.000844518,
        -0.000834158,
        -0.000823794,
        -0.000813426,
        -0.000803054,
        -0.000792679,
        -0.0007823,
        -0.000771918,
        -0.000761532,
        -0.000751143,
        -0.00074075,
        -0.000730354,
        -0.000719955,
        -0.000709553,
        -0.000699147,
        -0.000688739,
        -0.000678327,
        -0.000667912,
        -0.000657494,
        -0.000647074,
        -0.00063665,
        -0.000626224,
        -0.000615794,
        -0.000605362,
        -0.000594928,
        -0.000584491,
        -0.000574051,
        -0.000563608,
        -0.000553163,
        -0.000542716,
        -0.000532266,
        -0.000521814,
        -0.00051136,
        -0.000500903,
        -0.000490444,
        -0.000479983,
        -0.00046952,
        -0.000459054,
        -0.000448587,
        -0.000438118,
        -0.000427647,
        -0.000417174,
        -0.000406699,
        -0.000396222,
        -0.000385744,
        -0.000375264,
        -0.000364782,
        -0.000354299,
        -0.000343814,
        -0.000333328,
        -0.00032284,
        -0.000312351,
        -0.000301861,
        -0.000291369,
        -0.000280876,
        -0.000270382,
        -0.000259886,
        -0.00024939,
        -0.000238892,
        -0.000228394,
        -0.000217895,
        -0.000207394,
        -0.000196893,
        -0.000186391,
        -0.000175888,
        -0.000165385,
        -0.00015488,
        -0.000144376,
        -0.00013387,
        -0.000123364,
        -0.000112858,
        -0.000102351,
        -9.18442e-05,
        -8.13368e-05,
        -7.0829e-05,
        -6.0321e-05,
        -4.98129e-05,
        -3.93046e-05,
        -2.87962e-05,
        -1.82878e-05,
        -7.77934e-06,
        2.72902e-06,
        1.32373e-05,
    ]
)
p_right_dt_z = np.array(
    [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
    ]
)

interpolate_position_right = np.array(
    [
        CubicHermiteSpline(
            t,
            x_right,
            p_right_x / mass_right,
        ),
        CubicHermiteSpline(
            t,
            y_right,
            p_right_y / mass_right,
        ),
        CubicHermiteSpline(
            t,
            z_right,
            p_right_z / mass_right,
        ),
    ]
)
interpolate_position_left = np.array(
    [
        CubicHermiteSpline(
            t,
            x_left,
            p_left_x / mass_left,
        ),
        CubicHermiteSpline(
            t,
            y_left,
            p_left_y / mass_left,
        ),
        CubicHermiteSpline(
            t,
            z_left,
            p_left_z / mass_left,
        ),
    ]
)
interpolate_momentum_right = np.array(
    [
        CubicHermiteSpline(
            t,
            p_right_x,
            p_right_dt_x,
        ),
        CubicHermiteSpline(
            t,
            p_right_y,
            p_right_dt_y,
        ),
        CubicHermiteSpline(
            t,
            p_right_z,
            p_right_dt_z,
        ),
    ]
)
interpolate_momentum_left = np.array(
    [
        CubicHermiteSpline(
            t,
            p_left_x,
            p_left_dt_x,
        ),
        CubicHermiteSpline(
            t,
            p_left_y,
            p_left_dt_y,
        ),
        CubicHermiteSpline(
            t,
            p_left_z,
            p_left_dt_z,
        ),
    ]
)


def distance_left(x):
    return np.sqrt(
        (x[0] - xcoords[0]) * (x[0] - xcoords[0]) + x[1] * x[1] + x[2] * x[2]
    )


def distance_right(x):
    return np.sqrt(
        (x[0] - xcoords[1]) * (x[0] - xcoords[1]) + x[1] * x[1] + x[2] * x[2]
    )


def deriv_one_over_distance_left(x):
    return -(x - np.array([xcoords[0], 0.0, 0.0])) / (
        distance_left(x) * distance_left(x) * distance_left(x)
    )


def deriv_one_over_distance_right(x):
    return -(x - np.array([xcoords[1], 0.0, 0.0])) / (
        distance_right(x) * distance_right(x) * distance_right(x)
    )


def deriv_3_distance_left(x):
    deriv_3_distance_left_aux = np.zeros((3, 3, 3))
    for i in range(3):
        for j in range(3):
            for k in range(3):
                deriv_3_distance_left_aux[i, j, k] = (
                    -normal_left(x)[k] * delta[i][j]
                    - normal_left(x)[i] * delta[j][k]
                    - normal_left(x)[j] * delta[i][k]
                    + 3
                    * normal_left(x)[i]
                    * normal_left(x)[j]
                    * normal_left(x)[k]
                ) / np.square(distance_left(x))
    return deriv_3_distance_left_aux


def deriv_3_distance_right(x):
    deriv_3_distance_right_aux = np.zeros((3, 3, 3))
    for i in range(3):
        for j in range(3):
            for k in range(3):
                deriv_3_distance_right_aux[i, j, k] = (
                    -normal_right(x)[k] * delta[i][j]
                    - normal_right(x)[i] * delta[j][k]
                    - normal_right(x)[j] * delta[i][k]
                    + 3
                    * normal_right(x)[i]
                    * normal_right(x)[j]
                    * normal_right(x)[k]
                ) / np.square(distance_right(x))
    return deriv_3_distance_right_aux


def normal_left(x):
    return (x - np.array([xcoords[0], 0.0, 0.0])) / distance_left(x)


def normal_right(x):
    return (x - np.array([xcoords[1], 0.0, 0.0])) / distance_right(x)


def retarded_time_left(x):
    def f_left(t):
        distance_left_t = np.sqrt(
            (interpolate_position_left[0](t) - x[0])
            * (interpolate_position_left[0](t) - x[0])
            + (interpolate_position_left[1](t) - x[1])
            * (interpolate_position_left[1](t) - x[1])
            + (interpolate_position_left[2](t) - x[2])
            * (interpolate_position_left[2](t) - x[2])
        )
        return t + distance_left_t

    root = toms748(
        f_left,
        root_finder_bracket_time_lower(x),
        root_finder_bracket_time_upper(x),
    )
    return root


def retarded_time_right(x):
    def f_right(t):
        distance_right_t = np.sqrt(
            (interpolate_position_right[0](t) - x[0])
            * (interpolate_position_right[0](t) - x[0])
            + (interpolate_position_right[1](t) - x[1])
            * (interpolate_position_right[1](t) - x[1])
            + (interpolate_position_right[2](t) - x[2])
            * (interpolate_position_right[2](t) - x[2])
        )
        return t + distance_right_t

    root = toms748(
        f_right,
        root_finder_bracket_time_lower(x),
        root_finder_bracket_time_upper(x),
    )
    return root


def root_finder_bracket_time_lower(x):
    time = t
    time_lower = time.min()
    return time_lower


def root_finder_bracket_time_upper(x):
    time = t
    time_upper = time.max()
    return time_upper


def near_zone_term(x):
    r_left = distance_left(x)
    r_right = distance_right(x)
    n_left = normal_left(x)
    n_right = normal_right(x)
    s = r_left + r_right + separation
    near_zone_term_aux = np.zeros((3, 3))
    for i in range(3):
        for j in range(3):
            near_zone_term_aux[i, j] += (
                0.25
                / (mass_left * r_left)
                * (
                    (
                        np.dot(momentum1, momentum1)
                        - 5.0
                        * np.dot(n_left, momentum1)
                        * np.dot(n_left, momentum1)
                    )
                    * delta[i][j]
                    + 2.0 * momentum1[i] * momentum1[j]
                    + (
                        3.0
                        * np.dot(n_left, momentum1)
                        * np.dot(n_left, momentum1)
                        - 5.0 * np.dot(momentum1, momentum1)
                    )
                    * n_left[i]
                    * n_left[j]
                    + 6.0
                    * np.dot(n_left, momentum1)
                    * (n_left[i] * momentum1[j] + n_left[j] * momentum1[i])
                )
                + 0.25
                / (mass_right * r_right)
                * (
                    (
                        np.dot(momentum2, momentum2)
                        - 5.0
                        * np.dot(n_right, momentum2)
                        * np.dot(n_right, momentum2)
                    )
                    * delta[i][j]
                    + 2.0 * momentum2[i] * momentum2[j]
                    + (
                        3.0
                        * np.dot(n_right, momentum2)
                        * np.dot(n_right, momentum2)
                        - 5.0 * np.dot(momentum2, momentum2)
                    )
                    * n_right[i]
                    * n_right[j]
                    + 6.0
                    * np.dot(n_right, momentum2)
                    * (n_right[i] * momentum2[j] + n_right[j] * momentum2[i])
                )
                + 0.125
                * (mass_left * mass_right)
                * (
                    -32.0
                    / s
                    * (1.0 / separation + 1.0 / s)
                    * normal[i]
                    * normal[j]
                    + 2.0
                    * (
                        (r_left + r_right)
                        / (separation * separation * separation)
                        + 12.0 / (s * s)
                    )
                    * n_left[i]
                    * n_right[j]
                    + 16.0
                    * (2.0 / (s * s) - 1.0 / (separation * separation))
                    * (n_left[i] * normal[j] + n_left[j] * normal[i])
                    + (
                        5.0 / (separation * r_left)
                        - 1
                        / (separation * separation * separation)
                        * (r_right * r_right / r_left + 3.0 * r_left)
                        - 8.0 / s * (1.0 / r_left + 1.0 / s)
                    )
                    * n_left[i]
                    * n_left[j]
                    + (
                        5.0
                        * r_left
                        / (separation * separation * separation)
                        * (r_left / r_right - 1.0)
                        - 17.0 / (separation * r_left)
                        + 4.0 / (r_left * r_right)
                        + 8.0 / s * (1.0 / r_left + 4.0 / separation)
                    )
                    * delta[i][j]
                )
                + 0.125
                * (mass_left * mass_right)
                * (
                    -32.0
                    / s
                    * (1.0 / separation + 1.0 / s)
                    * normal[i]
                    * normal[j]
                    + 2.0
                    * (
                        (r_left + r_right)
                        / (separation * separation * separation)
                        + 12.0 / (s * s)
                    )
                    * n_right[i]
                    * n_left[j]
                    - 16.0
                    * (2.0 / (s * s) - 1 / (separation * separation))
                    * (n_right[i] * normal[j] + n_right[j] * normal[i])
                    + (
                        5.0 / (separation * r_right)
                        - 1.0
                        / (separation * separation * separation)
                        * (r_left * r_left / r_right + 3.0 * r_right)
                        - 8.0 / s * (1.0 / r_right + 1.0 / s)
                    )
                    * n_right[i]
                    * n_right[j]
                    + (
                        5.0
                        * r_right
                        / (separation * separation * separation)
                        * (r_right / r_left - 1.0)
                        - 17.0 / (separation * r_right)
                        + 4.0 / (r_left * r_right)
                        + 8.0 / s * (1.0 / r_right + 4.0 / separation)
                    )
                    * delta[i][j]
                )
            )
    return near_zone_term_aux


def present_term(x):
    r_left = distance_left(x)
    r_right = distance_right(x)
    n_left = normal_left(x)
    n_right = normal_right(x)
    s = r_left + r_right + separation
    present_term_aux = np.zeros((3, 3))
    u1_1 = np.array([0.0, 0.0, 0.0])
    u1_2 = np.array([0.0, 0.0, 0.0])
    u2 = np.array([0.0, 0.0, 0.0])
    for i in range(3):
        u1_1[i] = momentum1[i] / np.sqrt(mass_left)
        u1_2[i] = momentum2[i] / np.sqrt(mass_right)
        u2[i] = np.sqrt(mass_left * mass_right / (2.0 * separation)) * normal[i]
    for i in range(3):
        for j in range(3):
            present_term_aux[i, j] += (
                -1.0
                / (4.0 * r_left)
                * (
                    (
                        np.dot(u1_1, u1_1)
                        - 5.0 * np.dot(u1_1, n_left) * np.dot(u1_1, n_left)
                    )
                    * delta[i][j]
                    + 2.0 * u1_1[i] * u1_1[j]
                    + (
                        3.0 * np.dot(u1_1, n_left) * np.dot(u1_1, n_left)
                        - 5.0 * np.dot(u1_1, u1_1)
                    )
                    * n_left[i]
                    * n_left[j]
                    + 6.0
                    * np.dot(u1_1, n_left)
                    * (n_left[i] * u1_1[j] + n_left[j] * u1_1[i])
                )
                - 1.0
                / (4.0 * r_right)
                * (
                    (
                        np.dot(u1_2, u1_2)
                        - 5 * np.dot(u1_2, n_right) * np.dot(u1_2, n_right)
                    )
                    * delta[i][j]
                    + 2.0 * u1_2[i] * u1_2[j]
                    + (
                        3.0 * np.dot(u1_2, n_right) * np.dot(u1_2, n_right)
                        - 5.0 * np.dot(u1_2, u1_2)
                    )
                    * n_right[i]
                    * n_right[j]
                    + 6.0
                    * np.dot(u1_2, n_right)
                    * (n_right[i] * u1_2[j] + n_right[j] * u1_2[i])
                )
                - 1.0
                / (4.0 * r_left)
                * (
                    (
                        np.dot(u2, u2)
                        - 5.0 * np.dot(u2, n_left) * np.dot(u2, n_left)
                    )
                    * delta[i][j]
                    + 2.0 * u2[i] * u2[j]
                    + (
                        3.0 * np.dot(u2, n_left) * np.dot(u2, n_left)
                        - 5.0 * np.dot(u2, u2)
                    )
                    * n_left[i]
                    * n_left[j]
                    + 6.0
                    * np.dot(u2, n_left)
                    * (n_left[i] * u2[j] + n_left[j] * u2[i])
                )
                - 1.0
                / (4.0 * r_right)
                * (
                    (
                        np.dot(u2, u2)
                        - 5.0 * np.dot(u2, n_right) * np.dot(u2, n_right)
                    )
                    * delta[i][j]
                    + 2.0 * u2[i] * u2[j]
                    + (
                        3.0 * np.dot(u2, n_right) * np.dot(u2, n_right)
                        - 5.0 * np.dot(u2, u2)
                    )
                    * n_right[i]
                    * n_right[j]
                    + 6.0
                    * np.dot(u2, n_right)
                    * (n_right[i] * u2[j] + n_right[j] * u2[i])
                )
            )
    return present_term_aux


def past_term(x):
    position_left_past_left = np.array(
        [
            interpolate_position_left[0](retarded_time_left(x)),
            interpolate_position_left[1](retarded_time_left(x)),
            interpolate_position_left[2](retarded_time_left(x)),
        ]
    )
    position_left_past_right = np.array(
        [
            interpolate_position_left[0](retarded_time_right(x)),
            interpolate_position_left[1](retarded_time_right(x)),
            interpolate_position_left[2](retarded_time_right(x)),
        ]
    )
    position_right_past_right = np.array(
        [
            interpolate_position_right[0](retarded_time_right(x)),
            interpolate_position_right[1](retarded_time_right(x)),
            interpolate_position_right[2](retarded_time_right(x)),
        ]
    )
    position_right_past_left = np.array(
        [
            interpolate_position_right[0](retarded_time_left(x)),
            interpolate_position_right[1](retarded_time_left(x)),
            interpolate_position_right[2](retarded_time_left(x)),
        ]
    )
    separation_past_left = np.sqrt(
        (position_left_past_left[0] - position_right_past_left[0])
        * (position_left_past_left[0] - position_right_past_left[0])
        + (position_left_past_left[1] - position_right_past_left[1])
        * (position_left_past_left[1] - position_right_past_left[1])
        + (position_left_past_left[2] - position_right_past_left[2])
        * (position_left_past_left[2] - position_right_past_left[2])
    )
    separation_past_right = np.sqrt(
        (position_left_past_right[0] - position_right_past_right[0])
        * (position_left_past_right[0] - position_right_past_right[0])
        + (position_left_past_right[1] - position_right_past_right[1])
        * (position_left_past_right[1] - position_right_past_right[1])
        + (position_left_past_right[2] - position_right_past_right[2])
        * (position_left_past_right[2] - position_right_past_right[2])
    )
    momentum_left_past_left = np.array(
        [
            interpolate_momentum_left[0](retarded_time_left(x)),
            interpolate_momentum_left[1](retarded_time_left(x)),
            interpolate_momentum_left[2](retarded_time_left(x)),
        ]
    )
    momentum_right_past_right = np.array(
        [
            interpolate_momentum_right[0](retarded_time_right(x)),
            interpolate_momentum_right[1](retarded_time_right(x)),
            interpolate_momentum_right[2](retarded_time_right(x)),
        ]
    )
    distance_left_past_left = np.sqrt(
        (x[0] - position_left_past_left[0])
        * (x[0] - position_left_past_left[0])
        + (x[1] - position_left_past_left[1])
        * (x[1] - position_left_past_left[1])
        + (x[2] - position_left_past_left[2])
        * (x[2] - position_left_past_left[2])
    )
    distance_right_past_right = np.sqrt(
        (x[0] - position_right_past_right[0])
        * (x[0] - position_right_past_right[0])
        + (x[1] - position_right_past_right[1])
        * (x[1] - position_right_past_right[1])
        + (x[2] - position_right_past_right[2])
        * (x[2] - position_right_past_right[2])
    )
    normal_left_past_left = (
        np.array(
            [
                x[0] - position_left_past_left[0],
                x[1] - position_left_past_left[1],
                x[2] - position_left_past_left[2],
            ]
        )
        / distance_left_past_left
    )
    normal_right_past_right = (
        np.array(
            [
                x[0] - position_right_past_right[0],
                x[1] - position_right_past_right[1],
                x[2] - position_right_past_right[2],
            ]
        )
        / distance_right_past_right
    )
    normal_past_left = (
        np.array(
            [
                position_left_past_left[0] - position_right_past_left[0],
                position_left_past_left[1] - position_right_past_left[1],
                position_left_past_left[2] - position_right_past_left[2],
            ]
        )
        / separation_past_left
    )
    normal_past_right = (
        np.array(
            [
                position_left_past_right[0] - position_right_past_right[0],
                position_left_past_right[1] - position_right_past_right[1],
                position_left_past_right[2] - position_right_past_right[2],
            ]
        )
        / separation_past_right
    )
    u1_tr1 = np.array([0.0, 0.0, 0.0])
    u1_tr2 = np.array([0.0, 0.0, 0.0])
    u2_tr1 = np.array([0.0, 0.0, 0.0])
    u2_tr2 = np.array([0.0, 0.0, 0.0])
    for i in range(3):
        u1_tr1[i] = momentum_left_past_left[i] / np.sqrt(mass_left)
        u1_tr2[i] = momentum_right_past_right[i] / np.sqrt(mass_right)
        u2_tr1[i] = (
            np.sqrt(mass_left * mass_right / (2.0 * separation_past_left))
            * normal_past_left[i]
        )
        u2_tr2[i] = (
            np.sqrt(mass_left * mass_right / (2.0 * separation_past_right))
            * normal_past_right[i]
        )
    past_term_aux = np.zeros((3, 3))
    for i in range(3):
        for j in range(3):
            past_term_aux[i, j] += (
                -1
                / (distance_left_past_left)
                * (
                    (
                        -2 * np.dot(u1_tr1, u1_tr1)
                        + 2
                        * np.dot(u1_tr1, normal_left_past_left)
                        * np.dot(u1_tr1, normal_left_past_left)
                    )
                    * delta[i][j]
                    + 4 * u1_tr1[i] * u1_tr1[j]
                    + (
                        2 * np.dot(u1_tr1, u1_tr1)
                        + 2
                        * np.dot(u1_tr1, normal_left_past_left)
                        * np.dot(u1_tr1, normal_left_past_left)
                    )
                    * normal_left_past_left[i]
                    * normal_left_past_left[j]
                    - 4
                    * np.dot(u1_tr1, normal_left_past_left)
                    * (
                        normal_left_past_left[i] * u1_tr1[j]
                        + normal_left_past_left[j] * u1_tr1[i]
                    )
                )
                - 1
                / (distance_right_past_right)
                * (
                    (
                        -2 * np.dot(u1_tr2, u1_tr2)
                        + 2
                        * np.dot(u1_tr2, normal_right_past_right)
                        * np.dot(u1_tr2, normal_right_past_right)
                    )
                    * delta[i][j]
                    + 4 * u1_tr2[i] * u1_tr2[j]
                    + (
                        2 * np.dot(u1_tr2, u1_tr2)
                        + 2
                        * np.dot(u1_tr2, normal_right_past_right)
                        * np.dot(u1_tr2, normal_right_past_right)
                    )
                    * normal_right_past_right[i]
                    * normal_right_past_right[j]
                    - 4
                    * np.dot(u1_tr2, normal_right_past_right)
                    * (
                        normal_right_past_right[i] * u1_tr2[j]
                        + normal_right_past_right[j] * u1_tr2[i]
                    )
                )
                - 1
                / (distance_left_past_left)
                * (
                    (
                        -2 * np.dot(u2_tr1, u2_tr1)
                        + 2
                        * np.dot(u2_tr1, normal_left_past_left)
                        * np.dot(u2_tr1, normal_left_past_left)
                    )
                    * delta[i][j]
                    + 4 * u2_tr1[i] * u2_tr1[j]
                    + (
                        2 * np.dot(u2_tr1, u2_tr1)
                        + 2
                        * np.dot(u2_tr1, normal_left_past_left)
                        * np.dot(u2_tr1, normal_left_past_left)
                    )
                    * normal_left_past_left[i]
                    * normal_left_past_left[j]
                    - 4
                    * np.dot(u2_tr1, normal_left_past_left)
                    * (
                        normal_left_past_left[i] * u2_tr1[j]
                        + normal_left_past_left[j] * u2_tr1[i]
                    )
                )
                - 1
                / (distance_right_past_right)
                * (
                    (
                        -2 * np.dot(u2_tr2, u2_tr2)
                        + 2
                        * np.dot(u2_tr2, normal_right_past_right)
                        * np.dot(u2_tr2, normal_right_past_right)
                    )
                    * delta[i][j]
                    + 4 * u2_tr2[i] * u2_tr2[j]
                    + (
                        2 * np.dot(u2_tr2, u2_tr2)
                        + 2
                        * np.dot(u2_tr2, normal_right_past_right)
                        * np.dot(u2_tr2, normal_right_past_right)
                    )
                    * normal_right_past_right[i]
                    * normal_right_past_right[j]
                    - 4
                    * np.dot(u2_tr2, normal_right_past_right)
                    * (
                        normal_right_past_right[i] * u2_tr2[j]
                        + normal_right_past_right[j] * u2_tr2[i]
                    )
                )
            )
    return past_term_aux


def radiative_term(x):
    return (
        np.zeros((3, 3)) + near_zone_term(x) + present_term(x) + past_term(x)
    )  # + integral_term(x)


def pn_conjugate_momentum3(x):
    pn_conjugate_momentum3_aux = np.zeros((3, 3))
    deriv_frac_r_left = deriv_one_over_distance_left(x)
    deriv_frac_r_right = deriv_one_over_distance_right(x)
    deriv_3_r_left = deriv_3_distance_left(x)
    deriv_3_r_right = deriv_3_distance_right(x)
    for i in range(3):
        for j in range(3):
            sum = 0.0
            for k in range(3):
                term1_1 = -delta[i, j] * deriv_frac_r_left[k]
                term2_1 = 2 * (
                    delta[i, k] * deriv_frac_r_left[j]
                    + delta[j, k] * deriv_frac_r_left[i]
                )
                term3_1 = -0.5 * deriv_3_r_left[i, j, k]
                term1_2 = -delta[i, j] * deriv_frac_r_right[k]
                term2_2 = 2 * (
                    delta[i, k] * deriv_frac_r_right[j]
                    + delta[j, k] * deriv_frac_r_right[i]
                )
                term3_2 = -0.5 * deriv_3_r_right[i, j, k]
                sum += momentum1[k] * (term1_1 + term2_1 + term3_1) + momentum2[
                    k
                ] * (term1_2 + term2_2 + term3_2)
            pn_conjugate_momentum3_aux[i, j] = sum
    return pn_conjugate_momentum3_aux


def pn_extrinsic_curvature(x):
    r_left = distance_left(x)
    r_right = distance_right(x)
    E_left = (
        mass_left
        + np.dot(momentum1, momentum1) / (2.0 * mass_left)
        - mass_left * mass_right / (2.0 * separation)
    )
    E_right = (
        mass_right
        + np.dot(momentum2, momentum2) / (2.0 * mass_right)
        - mass_left * mass_right / (2.0 * separation)
    )
    conformal_factor = 1.0 + E_left / (2.0 * r_left) + E_right / (2.0 * r_right)
    tilde_pi = pn_conjugate_momentum3(x)
    return -1.0 / pow(conformal_factor, 10) * tilde_pi


def conformal_metric(x):
    r_left = distance_left(x)
    r_right = distance_right(x)
    E_left = (
        mass_left
        + np.dot(momentum1, momentum1) / (2.0 * mass_left)
        - mass_left * mass_right / (2.0 * separation)
    )
    E_right = (
        mass_right
        + np.dot(momentum2, momentum2) / (2.0 * mass_right)
        - mass_left * mass_right / (2.0 * separation)
    )
    conformal_factor = 1.0 + E_left / (2.0 * r_left) + E_right / (2.0 * r_right)
    pn_conformal_term = np.diag(np.full(3, np.power(conformal_factor, 4)))
    att_func = 1.0 / (
        (
            1.0
            + atenuation_parameter
            * atenuation_parameter
            * mass_left
            * mass_left
            / (r_left * r_left)
        )
        * (
            1.0
            + atenuation_parameter
            * atenuation_parameter
            * mass_right
            * mass_right
            / (r_right * r_right)
        )
    )
    return pn_conformal_term + att_func * radiative_term(x)


def deriv_conformal_metric(x):
    return np.zeros((3, 3, 3))


def extrinsic_curvature_trace(x):
    inv_conformal_metric = np.linalg.inv(conformal_metric(x))
    extrinsic_curvature = pn_extrinsic_curvature(x)
    extrinsic_curvature_trace_aux = 0.0
    for i in range(3):
        for j in range(3):
            extrinsic_curvature_trace_aux += (
                inv_conformal_metric[i, j] * extrinsic_curvature[i, j]
            )
    return extrinsic_curvature_trace_aux


def shift_background(x):
    return np.zeros(3)


def longitudinal_shift_background(x):
    return np.zeros((3, 3))


def conformal_factor_minus_one(x):
    return 0.0


def energy_density(x):
    return 0.0


def stress_trace(x):
    return 0.0


def momentum_density(x):
    return np.zeros(3)
